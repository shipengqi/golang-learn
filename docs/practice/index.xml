<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go Learning – 🛠️ 实践</title><link>https://shipengqi.github.io/golang-learn/docs/practice/</link><description>Recent content in 🛠️ 实践 on Go Learning</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="https://shipengqi.github.io/golang-learn/docs/practice/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 编译</title><link>https://shipengqi.github.io/golang-learn/docs/practice/01_build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/01_build/</guid><description>
&lt;h2>条件编译&lt;span class="hx-absolute -hx-mt-20" id="条件编译">&lt;/span>
&lt;a href="#%e6%9d%a1%e4%bb%b6%e7%bc%96%e8%af%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 支持两种条件编译方式：&lt;/p>
&lt;ul>
&lt;li>编译标签（build tag）&lt;/li>
&lt;li>文件后缀&lt;/li>
&lt;/ul>
&lt;h3>编译标签&lt;span class="hx-absolute -hx-mt-20" id="编译标签">&lt;/span>
&lt;a href="#%e7%bc%96%e8%af%91%e6%a0%87%e7%ad%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>编译标签是以 &lt;code>// +build&lt;/code> 开头的注释，编译标签的规则：&lt;/p>
&lt;ol>
&lt;li>空格表示：OR&lt;/li>
&lt;li>逗号表示：AND&lt;/li>
&lt;li>&lt;code>!&lt;/code> 表示：NOT&lt;/li>
&lt;li>换行表示：AND&lt;/li>
&lt;/ol>
&lt;p>每个条件项的名字用 &amp;ldquo;字母+数字&amp;rdquo; 表示。主要支持以下几种条件：&lt;/p>
&lt;ul>
&lt;li>操作系统，例如：&lt;code>windows&lt;/code>、&lt;code>linux&lt;/code> 等，对应 &lt;code>runtime.GOOS&lt;/code> 的值。&lt;/li>
&lt;li>计算机架构，例如：&lt;code>amd64&lt;/code>、&lt;code>386&lt;/code>，对应 &lt;code>runtime.GOARCH&lt;/code> 的值。&lt;/li>
&lt;li>编译器，例如：&lt;code>gccgo&lt;/code>、&lt;code>gc&lt;/code>，是否开启 CGO,cgo。&lt;/li>
&lt;li>Go 版本，例如：&lt;code>go1.19&lt;/code> 表示从 从 Go 版本 1.19 起，&lt;code>go1.20&lt;/code> 表示从 从 Go 版本 1.20 起。&lt;/li>
&lt;li>自定义的标签，例如：编译时通过指定 &lt;code>-tags&lt;/code> 传入的值。&lt;/li>
&lt;li>&lt;code>// +build ignore&lt;/code>，表示编译时自动忽略该文件&lt;/li>
&lt;/ul>
&lt;p>编译标签之后必须有空行，否则会被编译器当做普通注释。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// +build linux,386 darwin,!cgo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">testpkg&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>运算表达式为：&lt;code>(linux &amp;amp;&amp;amp; 386) || (darwin &amp;amp;&amp;amp; !cgo)&lt;/code>。&lt;/p>
&lt;p>自定义 tag 只需要在 &lt;code>go build&lt;/code> 指令后用 &lt;code>-tags&lt;/code> 指定编译条件即可&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">go build -tags mytag1 mytag2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>对于 &lt;code>-tags&lt;/code>，多个标签既可以用逗号分隔，也可以用空格分隔，但它们都表示&amp;quot;与&amp;quot;的关系。早期 go 版本用空格分隔，后来改成了用逗号分隔，但空格依然可以识别。&lt;/p>
&lt;p>&lt;code>-tags&lt;/code> 也有 &lt;code>!&lt;/code> 规则，它表示的是没有这个标签。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// +build !hello
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">go build -tags&lt;span class="o">=&lt;/span>!hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>文件后缀&lt;span class="hx-absolute -hx-mt-20" id="文件后缀">&lt;/span>
&lt;a href="#%e6%96%87%e4%bb%b6%e5%90%8e%e7%bc%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>通过改变文件名的后缀来实现条件编译，如果源文件名包含后缀：&lt;code>_&amp;lt;GOOS&amp;gt;.go&lt;/code>，那么这个源文件只会在这个平台下编译，&lt;code>_&amp;lt;GOARCH&amp;gt;.go&lt;/code> 也是如此。这两个后缀可以结合在一起使用，但是要注意顺序：&lt;code>_&amp;lt;GOOS&amp;gt;_&amp;lt;GOARCH&amp;gt;.go&lt;/code>， 不能反过来用。例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mypkg_freebsd_arm.go // only builds on freebsd/arm systems
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mypkg_plan9.go // only builds on plan9&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果使用文件后缀，那么文件名就是必须的，否则会被编译器忽略，例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># 这个文件会被编译器忽略
_linux.go&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>选择编译标签还是文件后缀？&lt;span class="hx-absolute -hx-mt-20" id="选择编译标签还是文件后缀">&lt;/span>
&lt;a href="#%e9%80%89%e6%8b%a9%e7%bc%96%e8%af%91%e6%a0%87%e7%ad%be%e8%bf%98%e6%98%af%e6%96%87%e4%bb%b6%e5%90%8e%e7%bc%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>编译标签和文件后缀的功能上有重叠，例如一个文件 &lt;code>mypkg_linux.go&lt;/code> 代码中又包含了 &lt;code>//go:build linux&lt;/code>，既有编译标签又有文件后缀，那就有些多余了。&lt;/p>
&lt;p>通常情况下，如果源文件仅适配一个平台或者 CPU 架构，那么只使用文件后缀就可以满足，例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mypkg_linux.go // only builds on linux systems
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mypkg_windows_amd64.go // only builds on windows 64bit platforms&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>像下面稍微复杂的场景，就需要使用编译标签：&lt;/p>
&lt;ul>
&lt;li>这个源文件可以在超过一个平台或者超过一个 CPU 架构&lt;/li>
&lt;li>需要排除某个平台或架构&lt;/li>
&lt;li>有一些自定义的编译条件&lt;/li>
&lt;/ul>
&lt;h3>go:build&lt;span class="hx-absolute -hx-mt-20" id="gobuild">&lt;/span>
&lt;a href="#gobuild" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>//go:build&lt;/code> 功能和 &lt;code>// +build&lt;/code> 一样。只不过 &lt;code>//go:build&lt;/code> 是在 go 1.17 才引入的。目的是为了与其他现有的 Go 指令保持一致，例如 &lt;code>//go:generate&lt;/code>。&lt;/p>
&lt;p>规则： 由 &lt;code>||&lt;/code>、&lt;code>&amp;amp;&amp;amp;&lt;/code>、&lt;code>!&lt;/code> 运算符（或、与、非）和括号组成的表达式，&lt;code>//go:build ignore&lt;/code>，表示编译时自动忽略该文件。&lt;/p>
&lt;p>例如 &lt;code>//go:build (linux &amp;amp;&amp;amp; 386) || (darwin &amp;amp;&amp;amp; !cgo)&lt;/code>，表示目标系统是 386 的 linux 或者没有启用 cgo 的 darwin 时，当前文件会被编译进来。&lt;/p>
&lt;h2>交叉编译&lt;span class="hx-absolute -hx-mt-20" id="交叉编译">&lt;/span>
&lt;a href="#%e4%ba%a4%e5%8f%89%e7%bc%96%e8%af%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 可以通过设置环境变量来实现交叉编译，用来在一个平台上生成另一个平台的可执行程序：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># linux amd64
GOOS=linux GOARCH=amd64 go build main.go
# windows amd64
GOOS=windows GOARCH=amd64 go build main.go&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>环境变量 &lt;code>GOOS&lt;/code> 设置平台, &lt;code>GOARCH&lt;/code> 设置架构。&lt;/p>
&lt;h2>编译选项&lt;span class="hx-absolute -hx-mt-20" id="编译选项">&lt;/span>
&lt;a href="#%e7%bc%96%e8%af%91%e9%80%89%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">go build &lt;span class="o">[&lt;/span>-o output&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>-i&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>build flags&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>packages&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>-a&lt;/code> 强制重新编译所有包&lt;/li>
&lt;li>&lt;code>-n&lt;/code> 把需要执行的编译命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的&lt;/li>
&lt;li>&lt;code>-p n&lt;/code> 指定可以并行可运行的编译数目，默认是 CPU 的数目&lt;/li>
&lt;li>&lt;code>-o&lt;/code> 指定输出的可执行文件的文件名，可以带路径，例如 &lt;code>go build -o a/b/c&lt;/code>&lt;/li>
&lt;li>&lt;code>-i&lt;/code> 安装相应的包，编译并且 &lt;code>go install&lt;/code>&lt;/li>
&lt;li>&lt;code>-race&lt;/code> 开启编译的时候自动检测数据竞争的情况，目前只支持 64 位的机器&lt;/li>
&lt;li>&lt;code>-v&lt;/code> 打印出来我们正在编译的包名&lt;/li>
&lt;li>&lt;code>-work&lt;/code> 打印出来编译时候的临时文件夹名称，并且如果已经存在的话就不要删除&lt;/li>
&lt;li>&lt;code>-x&lt;/code> 打印出来执行的命令，其实就是和-n的结果类似，只是这个会执行&lt;/li>
&lt;li>&lt;code>-ccflags 'arg list'&lt;/code> 传递参数给 5c, 6c, 8c 调用&lt;/li>
&lt;li>&lt;code>-compiler name&lt;/code> 指定相应的编译器，gccgo 还是 gc&lt;/li>
&lt;li>&lt;code>-gccgoflags 'arg list'&lt;/code> 传递参数给 gccgo 编译连接调用&lt;/li>
&lt;li>&lt;code>-gcflags 'arg list'&lt;/code> 编译器参数&lt;/li>
&lt;li>&lt;code>-installsuffix suffix&lt;/code> 为了和默认的安装包区别开来，采用这个前缀来重新安装那些依赖的包，&lt;code>-race&lt;/code>的时候默认已经是 &lt;code>-installsuffix race&lt;/code>,大家可以通过 &lt;code>-n&lt;/code> 命令来验证&lt;/li>
&lt;li>&lt;code>-ldflags 'arg list'&lt;/code> 链接器参数&lt;/li>
&lt;li>&lt;code>-tags 'tag list'&lt;/code> 设置在编译的时候可以适配的那些tag，详细的tag限制参考里面的 Build Constraints&lt;/li>
&lt;/ul>
&lt;h3>gcflags&lt;span class="hx-absolute -hx-mt-20" id="gcflags">&lt;/span>
&lt;a href="#gcflags" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>-gcflags&lt;/code> 参数的格式是&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">-gcflags&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;pattern=arg list&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>pattern&lt;span class="hx-absolute -hx-mt-20" id="pattern">&lt;/span>
&lt;a href="#pattern" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>pattern 是选择包的模式，它可以有以下几种定义:&lt;/p>
&lt;ul>
&lt;li>&lt;code>main&lt;/code>: 表示 &lt;code>main&lt;/code> 函数所在的顶级包路径&lt;/li>
&lt;li>&lt;code>all&lt;/code>: 表示 &lt;code>GOPATH&lt;/code> 中的所有包。如果是 &lt;code>go modules&lt;/code> 模式，则表示主模块和它所有的依赖，包括 &lt;code>test&lt;/code> 文件的依赖&lt;/li>
&lt;li>&lt;code>std&lt;/code>: 表示 Go 标准库中的所有包&lt;/li>
&lt;li>&lt;code>...&lt;/code>: &lt;code>...&lt;/code> 是一个通配符，可以匹配任意字符串(包括空字符串)。
&lt;ul>
&lt;li>&lt;code>net/...&lt;/code> 表示 net 模块和它的所有子模块&lt;/li>
&lt;li>&lt;code>./...&lt;/code> 表示当前主模块和所有子模块&lt;/li>
&lt;li>如果 pattern 中包含了 &lt;code>/&lt;/code> 和 &lt;code>...&lt;/code>，那么就不会匹配 &lt;code>vendor&lt;/code> 目录
例如: &lt;code>./...&lt;/code> 不会匹配 &lt;code>./vendor&lt;/code> 目录。可以使用 &lt;code>./vendor/...&lt;/code> 匹配 &lt;code>vendor&lt;/code> 目录和它的子模块&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>go help packages&lt;/code> 查看模式说明。&lt;/p>
&lt;h4>arg list&lt;span class="hx-absolute -hx-mt-20" id="arg-list">&lt;/span>
&lt;a href="#arg-list" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>空格分隔，如果编译选项中含有空格，可以使用引号包起来。&lt;/p>
&lt;ul>
&lt;li>&lt;code>-N&lt;/code>: 禁止编译器优化&lt;/li>
&lt;li>&lt;code>-l&lt;/code>: 关闭内联 (&lt;code>inline&lt;/code>)&lt;/li>
&lt;li>&lt;code>-c&lt;/code>: &lt;code>int&lt;/code> 编译过程中的并发数，默认是 &lt;code>1&lt;/code>&lt;/li>
&lt;li>&lt;code>-B&lt;/code> 禁用越界检查&lt;/li>
&lt;li>&lt;code>-u&lt;/code> 禁用 unsafe&lt;/li>
&lt;li>&lt;code>-S&lt;/code> 输出汇编代码&lt;/li>
&lt;li>&lt;code>-m&lt;/code> 输出优化信息&lt;/li>
&lt;/ul>
&lt;h3>ldflags&lt;span class="hx-absolute -hx-mt-20" id="ldflags">&lt;/span>
&lt;a href="#ldflags" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;code>-s&lt;/code> 禁用符号表&lt;/li>
&lt;li>&lt;code>-w&lt;/code> 禁用 DRAWF 调试信息&lt;/li>
&lt;li>&lt;code>-X&lt;/code> 设置字符串全局变量值 &lt;code>-X ver=&amp;quot;0.99&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>-H&lt;/code> 设置可执行文件格式 &lt;code>-H windowsgui&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2>内联优化（inline）&lt;span class="hx-absolute -hx-mt-20" id="内联优化inline">&lt;/span>
&lt;a href="#%e5%86%85%e8%81%94%e4%bc%98%e5%8c%96inline" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>内联优化就是在编译期间，直接将调用函数的地方替换为函数的实现，它可以减少函数调用的开销（创建栈帧，读写寄存器，栈溢出检测等）以提高程序的性能。因为优化的对象为函数，所以也叫&lt;strong>函数内联&lt;/strong>。&lt;/p>
&lt;p>内联是一个递归的过程，一旦一个函数被内联到它的调用者中，编译器就可能将产生的代码内联到它的调用者中，依此类推。&lt;/p>
&lt;p>内联优化示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">f&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;inline&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">a&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">f&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">b&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">f&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>内联优化后：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">a&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;inline&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">b&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;inline&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>内联优化的效果&lt;span class="hx-absolute -hx-mt-20" id="内联优化的效果">&lt;/span>
&lt;a href="#%e5%86%85%e8%81%94%e4%bc%98%e5%8c%96%e7%9a%84%e6%95%88%e6%9e%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">inlinetest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//go:noinline
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>max_test.go&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">inlinetest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;testing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">Result&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">BenchmarkMax&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">testing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">B&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">r&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">N&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">r&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">Result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">r&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>现在是在禁用内联优化的情况下运行基准测试：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go test -bench=.
cpu: Intel(R) Core(TM) i7-10850H CPU @ 2.70GHz
BenchmarkMax-12 871122506 1.353 ns/op&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>去掉 &lt;code>//go:noinline&lt;/code> 后（可以使用 &lt;code>go build -gcflags=&amp;quot;-m -m&amp;quot; main.go&lt;/code> 来查看编译器的优化）再次运行基准测试：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go test -bench=.
cpu: Intel(R) Core(TM) i7-10850H CPU @ 2.70GHz
BenchmarkMax-12 1000000000 0.3534 ns/op&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>对比两次基准测试的结果，&lt;code>1.353ns&lt;/code> 和 &lt;code>0.3534ns&lt;/code>。打开内联优化的情况下，性能提高了 75%。&lt;/p>
&lt;h3>禁用内联&lt;span class="hx-absolute -hx-mt-20" id="禁用内联">&lt;/span>
&lt;a href="#%e7%a6%81%e7%94%a8%e5%86%85%e8%81%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Go 编译器默认开启内联优化，可以使用 &lt;code>-gcflags=&amp;quot;-l&amp;quot;&lt;/code> 来关闭。但是如果传递两个或两个以上的 &lt;code>-l&lt;/code> 则会打开内联，并启用更激进的内联策略：&lt;/p>
&lt;ul>
&lt;li>&lt;code>-gcflags=&amp;quot;-l -l&amp;quot;&lt;/code> 2 级内联&lt;/li>
&lt;li>&lt;code>-gcflags=&amp;quot;-l -l -l&amp;quot;&lt;/code> 3 级内联&lt;/li>
&lt;li>&lt;code>gcflags=-l=4&lt;/code> 4 级别内联&lt;/li>
&lt;/ul>
&lt;p>&lt;code>//go:noinline&lt;/code> 编译指令，可以禁用单个函数的内联：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//go:noinline
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">x&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">y&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">x&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">y&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>减小编译体积&lt;span class="hx-absolute -hx-mt-20" id="减小编译体积">&lt;/span>
&lt;a href="#%e5%87%8f%e5%b0%8f%e7%bc%96%e8%af%91%e4%bd%93%e7%a7%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 编译器默认编译出来的程序会带有符号表和调试信息，一般来说 release 版本可以去除调试信息以减小二进制体积。&lt;/p>
&lt;p>使用 &lt;code>-w&lt;/code> 和 &lt;code>-s&lt;/code> 来减少可执行文件的体积。但删除了调试信息后，可执行文件将无法使用 gdb/dlv 调试：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">go build -ldflags&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;-w -s&amp;#34;&lt;/span> ./abc.go&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>使用 upx&lt;span class="hx-absolute -hx-mt-20" id="使用-upx">&lt;/span>
&lt;a href="#%e4%bd%bf%e7%94%a8-upx" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;a href="https://github.com/upx/upx" target="_blank" rel="noopener">upx&lt;/a> 是一个常用的压缩动态库和可执行文件的工具，通常可减少 50-70% 的体积。&lt;/p>
&lt;p>下载 &lt;a href="https://github.com/upx/upx/releases" target="_blank" rel="noopener">upx&lt;/a> 后解压就可以使用了。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># 使用 upx
$ go build -o server main.go &amp;amp;&amp;amp; upx -9 server
# 结合编译选项
go build -ldflags=&amp;#34;-s -w&amp;#34; -o server main.go &amp;amp;&amp;amp; upx -9 server&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>upx 的参数 &lt;code>-9&lt;/code> 指的是压缩率，1 代表最低压缩率，9 代表最高压缩率。&lt;/p>
&lt;p>upx 压缩后的程序和压缩前的程序一样，无需解压仍然能够正常地运行，这种压缩方法称之为&lt;strong>带壳压缩&lt;/strong>。&lt;/p>
&lt;p>压缩包含两个部分：&lt;/p>
&lt;ul>
&lt;li>在程序开头或其他合适的地方插入解压代码&lt;/li>
&lt;li>将程序的其他部分压缩&lt;/li>
&lt;/ul>
&lt;p>执行时，也包含两个部分：&lt;/p>
&lt;ul>
&lt;li>首先执行的是程序开头的插入的解压代码，将原来的程序在内存中解压出来&lt;/li>
&lt;li>再执行解压后的程序。&lt;/li>
&lt;/ul>
&lt;p>也就是说，upx 在程序执行时，会有额外的解压动作，不过这个耗时几乎可以忽略。&lt;/p></description></item><item><title>Go 数据竞争检测器</title><link>https://shipengqi.github.io/golang-learn/docs/practice/02_go_race/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/02_go_race/</guid><description>
&lt;p>数据竞争是并发系统中最常见，同时也最难处理的 Bug 类型之一。数据竞争会在两个 goroutine 并发访问同一个变量，且至少有一个访问为写入时产生。&lt;/p>
&lt;p>下面是一个会导致程序崩溃的例子：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kt">bool&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="c1">// 第一个冲突的访问
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">c&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">m&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;b&amp;#34;&lt;/span> &lt;span class="c1">// 第二个冲突的访问
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">c&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="k">range&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">k&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>运行 &lt;code>go run -race ./main.go&lt;/code> 程序会马上崩溃：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>==================
WARNING: DATA RACE
Write at 0x00c00010a090 by goroutine 7:
runtime.mapassign_faststr()
/usr/local/go/src/runtime/map_faststr.go:203 &amp;#43;0x0
main.main.func1()
/root/workspace/main.go:9 &amp;#43;0x4a
Previous write at 0x00c00010a090 by main goroutine:
runtime.mapassign_faststr()
/usr/local/go/src/runtime/map_faststr.go:203 &amp;#43;0x0
main.main()
/root/workspace/main.go:12 &amp;#43;0x108
Goroutine 7 (running) created at:
main.main()
/root/workspace/main.go:8 &amp;#43;0xeb
==================
2 b
1 a
Found 1 data race(s)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>数据竞争检测器&lt;span class="hx-absolute -hx-mt-20" id="数据竞争检测器">&lt;/span>
&lt;a href="#%e6%95%b0%e6%8d%ae%e7%ab%9e%e4%ba%89%e6%a3%80%e6%b5%8b%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 内置了数据竞争检测器。使用时将 &lt;code>-race&lt;/code> 标记添加到 go 命令之后：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">go &lt;span class="nb">test&lt;/span> -race mypkg // 测试该包
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go run -race mysrc.go // 运行其源文件
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go build -race mycmd // 构建该命令
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">go install -race mypkg // 安装该包&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>选项&lt;span class="hx-absolute -hx-mt-20" id="选项">&lt;/span>
&lt;a href="#%e9%80%89%e9%a1%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Go 提供的 &lt;code>GORACE&lt;/code> 环境变量可以用来设置竞争检测器的选项，格式为 &lt;code>GORACE=&amp;quot;option1=val1 option2=val2&amp;quot;&lt;/code>&lt;/p>
&lt;p>支持的选项：&lt;/p>
&lt;ul>
&lt;li>&lt;code>log_path&lt;/code>（默认为 &lt;code>stderr&lt;/code>）：竞争检测器会将报告写入名为 &lt;code>&amp;lt;log_path&amp;gt;.pid&lt;/code> 的文件中。如果值为 &lt;code>stdout&lt;/code> 或 &lt;code>stderr&lt;/code> 时会将报告分别写入到标准输出和标准错误中。&lt;/li>
&lt;li>&lt;code>exitcode&lt;/code>（默认为 66）：检测到竞争后使用的退出状态码。&lt;/li>
&lt;li>&lt;code>strip_path_prefix&lt;/code>（默认为 &amp;ldquo;&amp;quot;）：从所有报告文件的路径中去除此前缀，使报告更加简洁。&lt;/li>
&lt;li>&lt;code>history_size&lt;/code>（默认为 1）：每个 Go 程序的内存访问历史为 &lt;code>32K * 2**history_size&lt;/code> 个元素。增加该值可以在报告中避免 &amp;ldquo;failed to restore the stack&amp;rdquo; 的提示，但代价是会增加内存的使用。&lt;/li>
&lt;li>&lt;code>halt_on_error&lt;/code>（默认为 0）：控制程序在报告第一次数据竞争后是否退出。&lt;/li>
&lt;/ul>
&lt;p>例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GORACE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;log_path=/tmp/race/report strip_path_prefix=/my/go/sources/&amp;#34;&lt;/span> go &lt;span class="nb">test&lt;/span> -race&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>编译标签&lt;span class="hx-absolute -hx-mt-20" id="编译标签">&lt;/span>
&lt;a href="#%e7%bc%96%e8%af%91%e6%a0%87%e7%ad%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>如果某些代码不需要被竞争检测器检查，可以通过编译标签来排除：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//go:build !race
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">foo&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>运行时开销&lt;span class="hx-absolute -hx-mt-20" id="运行时开销">&lt;/span>
&lt;a href="#%e8%bf%90%e8%a1%8c%e6%97%b6%e5%bc%80%e9%94%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>竞争检测器只会寻找在运行时发生的竞争，因此它不能在未执行的代码路径中寻找竞争。如果你的测试覆盖率比较低，可以通过 &lt;code>go build -race&lt;/code> 来编译，来寻找更多的竞争。&lt;/p>
&lt;p>竞争检测的代价因程序而异，但对于典型的程序，内存的使用会增加 5 到 10 倍， 而执行时间会增加 2 到 20 倍。&lt;/p></description></item><item><title>Go 性能分析（上）</title><link>https://shipengqi.github.io/golang-learn/docs/practice/04_pprof/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/04_pprof/</guid><description>
&lt;p>Go 提供的 pprof 工具可以用来做性能分析。pprof 可以读取分析样本的集合，并生成报告以可视化并帮助分析数据。&lt;/p>
&lt;p>pprof 可以用于：&lt;/p>
&lt;ul>
&lt;li>CPU 分析（CPU Profiling）：按照一定的频率采集所监听的应用程序 CPU（含寄存器）的使用情况，可确定应用程序在主动消耗 CPU 周期
时花费时间的位置。&lt;/li>
&lt;li>内存分析（Memory Profiling）：在应用程序进行堆分配时记录堆栈跟踪，用于监视当前和历史内存使用情况，以及检查内存泄漏。&lt;/li>
&lt;li>阻塞分析（Block Profiling）：记录 goroutine 阻塞等待同步（包括定时器通道）的位置。&lt;/li>
&lt;li>互斥锁分析（Mutex Profiling）：报告互斥锁的竞争情况。&lt;/li>
&lt;/ul>
&lt;h2>如何生成分析样本&lt;span class="hx-absolute -hx-mt-20" id="如何生成分析样本">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e7%94%9f%e6%88%90%e5%88%86%e6%9e%90%e6%a0%b7%e6%9c%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>生成分析样本的三种方式：&lt;/p>
&lt;ul>
&lt;li>&lt;code>runtime/pprof&lt;/code>：采集程序（非 Server）的运行数据。通过调用如 &lt;code>runtime.StartCPUProfile&lt;/code>, &lt;code>runtime.StopCPUProfile&lt;/code> 方法生成分析样本。主要用于&lt;strong>本地测试&lt;/strong>。
&lt;ul>
&lt;li>&lt;a href="https://github.com/pkg/profile" target="_blank" rel="noopener">pkg/profile&lt;/a> 封装了 &lt;code>runtime/pprof&lt;/code>，使用起来更加简便。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>net/http/pprof&lt;/code>：采集 HTTP Server 的运行时数据，通过 HTTP 服务获取 Profile 分析样本，底层还是调用的 &lt;code>runtime/pprof&lt;/code>。主要用于&lt;strong>服务器端测试&lt;/strong>。&lt;/li>
&lt;li>&lt;code>go test -bench&lt;/code>：使用 &lt;code>go test -bench=. -cpuprofile cpuprofile.out ...&lt;/code> 运行基准测试来生成分析样本，可以指定所需标识来进行数据采集。&lt;/li>
&lt;/ul>
&lt;p>以 &lt;code>net/http/pprof&lt;/code> 为例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span> &lt;span class="s">&amp;#34;net/http/pprof&amp;#34;&lt;/span> &lt;span class="c1">// net/http/pprof 注册的是默认的 mux
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">datas&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">data&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">sData&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">datas&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nb">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">datas&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">sData&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">sData&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;https://github.com/shipengqi&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">ListenAndServe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;0.0.0.0:8080&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>_ &amp;quot;net/http/pprof&amp;quot;&lt;/code> 这行代码会自动添加 &lt;code>/debug/pprof&lt;/code> 的路由。程序运行后，访问 http://localhost:8080/debug/pprof 就可以查看分析样本。&lt;/p>
&lt;h2>如何查看分析报告&lt;span class="hx-absolute -hx-mt-20" id="如何查看分析报告">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b%e5%88%86%e6%9e%90%e6%8a%a5%e5%91%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>打开 http://localhost:8080/debug/pprof 后会看到下面页面：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/810cbdff82baab7279ec4504d20e5b7bd88b6b33/go/pprof-home.png" alt="pprof-home" loading="lazy" />&lt;/p>
&lt;p>pprof 包括了几个子页面：&lt;/p>
&lt;ul>
&lt;li>alloc: 查看所有内存分配的情况&lt;/li>
&lt;li>block（Block Profiling）：&lt;code>&amp;lt;ip:port&amp;gt;/debug/pprof/block&lt;/code>，查看导致阻塞同步的堆栈跟踪&lt;/li>
&lt;li>cmdline : 当前程序的命令行调用&lt;/li>
&lt;li>goroutine：&lt;code>&amp;lt;ip:port&amp;gt;/debug/pprof/goroutine&lt;/code>，查看当前所有运行的 goroutines 堆栈跟踪。&lt;/li>
&lt;li>heap（Memory Profiling）: &lt;code>&amp;lt;ip:port&amp;gt;/debug/pprof/heap&lt;/code>，查看活动对象的内存分配情况，在获取堆样本之前，可以指定 gc GET 参数来运行 gc。&lt;/li>
&lt;li>mutex（Mutex Profiling）: &lt;code>&amp;lt;ip:port&amp;gt;/debug/pprof/mutex&lt;/code>，查看导致互斥锁竞争的持有者的堆栈跟踪。&lt;/li>
&lt;li>profile（CPU Profiling）: &lt;code>&amp;lt;ip:port&amp;gt;/debug/pprof/profile&lt;/code>， 默认进行 &lt;code>30s&lt;/code> 的 CPU Profiling，可以设置 GET 参数 &lt;code>seconds&lt;/code> 来指定持续时间。获取跟踪文件之后，使用 &lt;code>go tool trace&lt;/code> 命令来分析。&lt;/li>
&lt;li>threadcreate：&lt;code>&amp;lt;ip:port&amp;gt;/debug/pprof/threadcreate&lt;/code>，查看创建新 OS 线程的堆栈跟踪。&lt;/li>
&lt;li>trace: 当前程序的执行轨迹。可以设置 GET 参数 &lt;code>seconds&lt;/code> 来指定持续时间。获取跟踪文件之后，使用 &lt;code>go tool trace&lt;/code> 命令来分析。&lt;/li>
&lt;/ul>
&lt;h3>在 Web 查看分析报告&lt;span class="hx-absolute -hx-mt-20" id="在-web-查看分析报告">&lt;/span>
&lt;a href="#%e5%9c%a8-web-%e6%9f%a5%e7%9c%8b%e5%88%86%e6%9e%90%e6%8a%a5%e5%91%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>点击 profile，等待 30s 后会下载 CPU profile 文件，或者执行命令 &lt;code>go tool pprof http://localhost:8080/debug/pprof/profile&lt;/code> ，得到的输出中有一行&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">Saved profile in C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\s&lt;/span>hipeng.CORPDOM&lt;span class="se">\p&lt;/span>prof&lt;span class="se">\p&lt;/span>prof.samples.cpu.002.pb.gz&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>表示生成的 profile 文件路径。&lt;/p>
&lt;p>执行 &lt;code>go tool pprof -http=&amp;lt;port&amp;gt; &amp;lt;profile 文件&amp;gt;&lt;/code> 启动 web server，然后就可以访问 &lt;code>http://localhost:8081&lt;/code> 来查看：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ go tool pprof -http&lt;span class="o">=&lt;/span>:8081 profile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Serving web UI on http://localhost:8081&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>或者输入 &lt;code>web&lt;/code>，会在浏览器打开一个 svg 图片：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ go tool pprof profile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> web&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>如果出现 &lt;code>Could not execute dot; may need to install graphviz.&lt;/code>，那么需要安裝 Graphviz。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/810cbdff82baab7279ec4504d20e5b7bd88b6b33/go/profile-graph.png" alt="profile-graph" loading="lazy" />&lt;/p>
&lt;p>图中框越大，线越粗代表它占用 CPU 的时间越长。&lt;/p>
&lt;p>点击 &lt;code>View -&amp;gt; Flame Graph&lt;/code> 可以查看火焰图：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/810cbdff82baab7279ec4504d20e5b7bd88b6b33/go/profile-flame-graph.png" alt="profile-flame-graph" loading="lazy" />&lt;/p>
&lt;p>图中调用顺序由上到下，每一块代表一个函数，越大代表占用 CPU 的时间越长。&lt;/p>
&lt;p>还可以查看 Top，Peek，Source 等。能够更方便、更直观的看到 Go 应用程序的调用链、使用情况等。&lt;/p>
&lt;h3>在终端查看分析报告&lt;span class="hx-absolute -hx-mt-20" id="在终端查看分析报告">&lt;/span>
&lt;a href="#%e5%9c%a8%e7%bb%88%e7%ab%af%e6%9f%a5%e7%9c%8b%e5%88%86%e6%9e%90%e6%8a%a5%e5%91%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>使用 &lt;code>go tool pprof&lt;/code> 命令可以在交互式终端查看分析报告。&lt;/p>
&lt;h4>CPU Profiling&lt;span class="hx-absolute -hx-mt-20" id="cpu-profiling">&lt;/span>
&lt;a href="#cpu-profiling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>执行 60s 的 CPU Profiling：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ go tool pprof http://localhost:8080/debug/pprof/profile?seconds&lt;span class="o">=&lt;/span>&lt;span class="m">60&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Fetching profile over HTTP from http://localhost:6060/debug/pprof/profile?seconds&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Saved profile in C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\s&lt;/span>hipeng.CORPDOM&lt;span class="se">\p&lt;/span>prof&lt;span class="se">\p&lt;/span>prof.samples.cpu.001.pb.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Type: cpu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Time: Nov 18, &lt;span class="m">2019&lt;/span> at 11:08am &lt;span class="o">(&lt;/span>CST&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Duration: 10.20s, Total &lt;span class="nv">samples&lt;/span> &lt;span class="o">=&lt;/span> 10.03s &lt;span class="o">(&lt;/span>98.38%&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entering interactive mode &lt;span class="o">(&lt;/span>&lt;span class="nb">type&lt;/span> &lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> commands, &lt;span class="s2">&amp;#34;o&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> options&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输入 &lt;code>top 10&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> top &lt;span class="m">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Showing nodes accounting &lt;span class="k">for&lt;/span> 9.54s, 95.11% of 10.03s total
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Dropped &lt;span class="m">73&lt;/span> nodes &lt;span class="o">(&lt;/span>cum &amp;lt;&lt;span class="o">=&lt;/span> 0.05s&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Showing top &lt;span class="m">10&lt;/span> nodes out of &lt;span class="m">14&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flat flat% sum% cum cum%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 9.42s 93.92% 93.92% 9.46s 94.32% runtime.cgocall
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.02s 0.2% 94.12% 9.62s 95.91% internal/poll.&lt;span class="o">(&lt;/span>*FD&lt;span class="o">)&lt;/span>.writeConsole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.02s 0.2% 94.32% 9.81s 97.81% log.&lt;span class="o">(&lt;/span>*Logger&lt;span class="o">)&lt;/span>.Output
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.02s 0.2% 94.52% 0.10s 1% log.&lt;span class="o">(&lt;/span>*Logger&lt;span class="o">)&lt;/span>.formatHeader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.02s 0.2% 94.72% 0.06s 0.6% main.Add
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.02s 0.2% 94.92% 9.50s 94.72% syscall.Syscall6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.01s 0.1% 95.01% 0.07s 0.7% runtime.systemstack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0.01s 0.1% 95.11% 9.51s 94.82% syscall.WriteConsole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 95.11% 0.07s 0.7% fmt.Sprintln
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 95.11% 9.69s 96.61% internal/poll.&lt;span class="o">(&lt;/span>*FD&lt;span class="o">)&lt;/span>.Write&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>flat&lt;/code>：当前函数上的运行耗时&lt;/li>
&lt;li>&lt;code>flat%&lt;/code>：当前函数上的 CPU 运行耗时总比例&lt;/li>
&lt;li>&lt;code>sum%&lt;/code>：当前函数上累积使用 CPU 总比例&lt;/li>
&lt;li>&lt;code>cum&lt;/code>：当前函数加上它之上的调用运行总耗时&lt;/li>
&lt;li>&lt;code>cum%&lt;/code>：当前函数加上它之上的调用的 CPU 运行耗时总比例&lt;/li>
&lt;li>最后一列为函数名称&lt;/li>
&lt;/ul>
&lt;h4>Heap Profiling&lt;span class="hx-absolute -hx-mt-20" id="heap-profiling">&lt;/span>
&lt;a href="#heap-profiling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Heap Profiling 支持四种内存概况的分析：&lt;/p>
&lt;ul>
&lt;li>&lt;code>inuse_space&lt;/code>：分析程序常驻内存的占用&lt;/li>
&lt;li>&lt;code>alloc_objects&lt;/code>：分析程序临时分配的内存&lt;/li>
&lt;li>&lt;code>inuse_objects&lt;/code>：查看函数对应的对象的数量&lt;/li>
&lt;li>&lt;code>alloc_space&lt;/code>：查看函数分配的内存空间大小&lt;/li>
&lt;/ul>
&lt;p>默认就是 &lt;code>inuse_space&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 默认就是 inuse_space，-inuse_space 可以忽略&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ go tool pprof -inuse_space http://localhost:8080/debug/pprof/heap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Saved profile in C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\s&lt;/span>hipeng&lt;span class="se">\p&lt;/span>prof&lt;span class="se">\p&lt;/span>prof.___go_build_github_com_shipengqi_example_v1_advance_go_pprof.exe.alloc_objects.alloc_space.inuse_objects.inuse_space.002.pb.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Type: inuse_space
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Time: Dec 6, &lt;span class="m">2023&lt;/span> at 2:05pm &lt;span class="o">(&lt;/span>CST&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entering interactive mode &lt;span class="o">(&lt;/span>&lt;span class="nb">type&lt;/span> &lt;span class="s2">&amp;#34;help&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> commands, &lt;span class="s2">&amp;#34;o&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> options&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输入 &lt;code>top&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> top
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Showing nodes accounting &lt;span class="k">for&lt;/span> 42464.20kB, 100% of 42464.20kB total
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> flat flat% sum% cum cum%
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">41952.16kB 98.79% 98.79% 41952.16kB 98.79% main.Add &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 512.04kB 1.21% 100% 512.04kB 1.21% unicode/utf16.Encode
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 512.04kB 1.21% internal/poll.&lt;span class="o">(&lt;/span>*FD&lt;span class="o">)&lt;/span>.Write
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 512.04kB 1.21% internal/poll.&lt;span class="o">(&lt;/span>*FD&lt;span class="o">)&lt;/span>.writeConsole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 512.04kB 1.21% log.&lt;span class="o">(&lt;/span>*Logger&lt;span class="o">)&lt;/span>.output
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 512.04kB 1.21% log.Println &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 42464.20kB 100% main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 512.04kB 1.21% os.&lt;span class="o">(&lt;/span>*File&lt;span class="o">)&lt;/span>.Write
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> 0% 100% 512.04kB 1.21% os.&lt;span class="o">(&lt;/span>*File&lt;span class="o">)&lt;/span>.write &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输入 &lt;code>traces&lt;/code> 查看 goroutines 占用内存的大小：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> traces
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Type: inuse_space
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Time: Dec 6, &lt;span class="m">2023&lt;/span> at 2:45pm &lt;span class="o">(&lt;/span>CST&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> main.Add &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bytes: 2.25MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2.28MB main.Add &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bytes: 1.80MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1.85MB main.Add &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bytes: 1.43MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> main.Add &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> bytes: 1.14MB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">0&lt;/span> main.Add &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Goroutine Profiling&lt;span class="hx-absolute -hx-mt-20" id="goroutine-profiling">&lt;/span>
&lt;a href="#goroutine-profiling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ go tool pprof http://localhost:8080/debug/pprof/goroutine
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Saved profile in C:&lt;span class="se">\U&lt;/span>sers&lt;span class="se">\s&lt;/span>hipeng&lt;span class="se">\p&lt;/span>prof&lt;span class="se">\p&lt;/span>prof.___go_build_github_com_shipengqi_example_v1_advance_go_pprof.exe.goroutine.001.pb.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输入 &lt;code>traces&lt;/code> 会输出所有 goroutines 的调用栈信息，可以很方便的查看整个调用链。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>pprof&lt;span class="o">)&lt;/span> traces
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">1&lt;/span> runtime.cgocall
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> syscall.SyscallN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> syscall.Syscall6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> syscall.WriteConsole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> internal/poll.&lt;span class="o">(&lt;/span>*FD&lt;span class="o">)&lt;/span>.writeConsole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> internal/poll.&lt;span class="o">(&lt;/span>*FD&lt;span class="o">)&lt;/span>.Write
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> os.&lt;span class="o">(&lt;/span>*File&lt;span class="o">)&lt;/span>.write &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> os.&lt;span class="o">(&lt;/span>*File&lt;span class="o">)&lt;/span>.Write
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log.&lt;span class="o">(&lt;/span>*Logger&lt;span class="o">)&lt;/span>.output
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> log.Println &lt;span class="o">(&lt;/span>inline&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> main.main.func1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-----------+-------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">1&lt;/span> runtime.goroutineProfileWithLabels
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runtime/pprof.runtime_goroutineProfileWithLabels
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runtime/pprof.writeRuntimeProfile
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runtime/pprof.writeGoroutine
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runtime/pprof.&lt;span class="o">(&lt;/span>*Profile&lt;span class="o">)&lt;/span>.WriteTo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net/http/pprof.handler.ServeHTTP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net/http/pprof.Index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net/http.HandlerFunc.ServeHTTP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net/http.&lt;span class="o">(&lt;/span>*ServeMux&lt;span class="o">)&lt;/span>.ServeHTTP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net/http.serverHandler.ServeHTTP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> net/http.&lt;span class="o">(&lt;/span>*conn&lt;span class="o">)&lt;/span>.serve&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>调用栈的顺序是&lt;strong>自下而上&lt;/strong>的。&lt;/p>
&lt;h4>Block 和 Mutex Profiling&lt;span class="hx-absolute -hx-mt-20" id="block-和-mutex-profiling">&lt;/span>
&lt;a href="#block-%e5%92%8c-mutex-profiling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Block 和 Mutex Profiling 都需要在代码中调用 &lt;code>runtime&lt;/code> 包的方法进行设置：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;runtime&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Rate 小于 0，则不采集
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">runtime&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetBlockProfileRate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Fraction 小于 0，则不采集
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">runtime&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SetMutexProfileFraction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>然后使用 &lt;code>go tool pprof&lt;/code> 分析，输入 &lt;code>top&lt;/code> 查看排名，&lt;code>list &amp;lt;func&amp;gt;&lt;/code> 可以查看具体的信息。&lt;/p>
&lt;h4>对比&lt;span class="hx-absolute -hx-mt-20" id="对比">&lt;/span>
&lt;a href="#%e5%af%b9%e6%af%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>当需要查看不同时间段的差异时，可以使用 &lt;code>-base&lt;/code> 参数来对比两个 profile 文件。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">$ go tool pprof -base &amp;lt;profile1&amp;gt; &amp;lt;profile2&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Go 性能分析（下）</title><link>https://shipengqi.github.io/golang-learn/docs/practice/05_trace/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/05_trace/</guid><description>
&lt;p>Go 提供了完善的性能分析工具：&lt;code>pprof&lt;/code> 和 &lt;code>trace&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>pprof&lt;/code> 主要适用于 CPU 占用、内存分配等资源的分析。&lt;/li>
&lt;li>&lt;code>trace&lt;/code> 记录了程序运行中的行为，更适合于找出程序在一段时间内正在做什么。例如指定的 goroutine
在何时执行、执行了多长时间、什么时候陷入了堵塞、什么时候解除了堵塞、GC 如何影响了 goroutine 的执行。&lt;/li>
&lt;/ul>
&lt;h2>如何生成分析样本&lt;span class="hx-absolute -hx-mt-20" id="如何生成分析样本">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e7%94%9f%e6%88%90%e5%88%86%e6%9e%90%e6%a0%b7%e6%9c%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>生成 Trace 分析样本的方式主要有三种：&lt;/p>
&lt;p>&lt;strong>1. 使用 &lt;code>runtime/trace&lt;/code> 标准库来生成&lt;/strong>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;runtime/trace&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">os&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;trace.out&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Close&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">err&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">trace&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">trace&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Stop&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ch&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// read from channel
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">ch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>执行程序就可以生成跟踪文件 &lt;code>trace.out&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>go run main.go&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>2. 使用 &lt;code>net/http/pprof&lt;/code> 来生成&lt;/strong>，查看 &lt;a href="../04_pprof" >Go 性能分析&lt;/a>。&lt;/p>
&lt;p>&lt;strong>3. 使用 &lt;code>go test -trace&lt;/code> 来生成&lt;/strong>，例如 &lt;code>go test -trace trace.out demo_test.go&lt;/code>。&lt;/p>
&lt;h2>如何查看分析报告&lt;span class="hx-absolute -hx-mt-20" id="如何查看分析报告">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e6%9f%a5%e7%9c%8b%e5%88%86%e6%9e%90%e6%8a%a5%e5%91%8a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>使用上面例子生成的 &lt;code>trace.out&lt;/code> 文件，运行下面的命令：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go tool trace trace.out
2019/11/18 15:17:28 Parsing trace...
2019/11/18 15:17:28 Splitting trace...
2019/11/18 15:17:28 Opening browser. Trace viewer is listening on http://127.0.0.1:59181&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>访问 http://127.0.0.1:59181，可以看到类似的界面：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/f700fde7450ccdb21c410611ff949769e301c364/go/trace-home.png" alt="trace-home" loading="lazy" />&lt;/p>
&lt;ul>
&lt;li>&lt;code>View trace&lt;/code>：查看所有 goroutines 的执行过程。&lt;/li>
&lt;li>&lt;code>Goroutine analysis&lt;/code>：goroutines 分析，查看具体的 goroutine 的信息。&lt;/li>
&lt;li>&lt;code>Network blocking profile&lt;/code>：网络阻塞概况。&lt;/li>
&lt;li>&lt;code>Synchronization blocking profile&lt;/code>：同步阻塞概况。&lt;/li>
&lt;li>&lt;code>Syscall blocking profile&lt;/code>：系统调用阻塞概况。&lt;/li>
&lt;li>&lt;code>Scheduler latency profile&lt;/code>：调度延迟的概况，可以调度在哪里最耗费时间。&lt;/li>
&lt;li>&lt;code>User defined tasks&lt;/code>：用户自定义任务。&lt;/li>
&lt;li>&lt;code>User defined regions&lt;/code>：用户自定义区域。&lt;/li>
&lt;li>&lt;code>Minimum mutator utilization&lt;/code>：最低 Mutator 利用率。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Network/Sync/Syscall blocking profile 是分析锁竞争的最佳选择。&lt;/p>
&lt;/blockquote>
&lt;h3>View trace&lt;span class="hx-absolute -hx-mt-20" id="view-trace">&lt;/span>
&lt;a href="#view-trace" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>进入 &lt;code>View trace&lt;/code> 页面：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/f700fde7450ccdb21c410611ff949769e301c364/go/view-trace.png" alt="view-trace" loading="lazy" />&lt;/p>
&lt;ol>
&lt;li>时间线：显示执行的时间。&lt;/li>
&lt;li>Goroutines/Heap/Threads 的详细信息。
&lt;ul>
&lt;li>Goroutines：显示在执行期间的有多少个 goroutine 在运行，包含 GC 等待（GCWaiting）、可运行（Runnable）、 运行中（Running）这三种状态。&lt;/li>
&lt;li>Heap：显示执行期间的内存分配和释放情况，包含当前堆使用量（Allocated）和下一次 GC 的阈值（NextGC）统计。&lt;/li>
&lt;li>Threads：显示执行期间有多少个系统线程在运行，包含正在调用 SysCall （InSysCall）和运行中（Running）两种状态。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>PROCS&lt;/code>：每个 Processor 显示一行。默认显示系统内核数量，可以使用 &lt;code>runtime.GOMAXPROCS(n)&lt;/code> 来控制数量。
&lt;ul>
&lt;li>&lt;code>GC&lt;/code>：显示执行期间垃圾回收执行的次数和时间。&lt;strong>每次执行 GC，堆内存都会被释放一部分&lt;/strong>。&lt;/li>
&lt;li>协程和事件：显示在每个虚拟处理器上有什么 Goroutine 正在运行，而连线行为代表事件关联。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>快捷键：w（放大），s（缩小），a（左移），d（右移）。&lt;/p>
&lt;/blockquote>
&lt;h4>查看某个时间点 goroutines 情况&lt;span class="hx-absolute -hx-mt-20" id="查看某个时间点-goroutines-情况">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%aa%e6%97%b6%e9%97%b4%e7%82%b9-goroutines-%e6%83%85%e5%86%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/f700fde7450ccdb21c410611ff949769e301c364/go/view-trace-g-counter.png" alt="view-trace-g-counter" loading="lazy" />&lt;/p>
&lt;p>图中正在运行的 goroutine 数量为 3，其他状态的 goroutine 数量都是 0。&lt;/p>
&lt;h4>查看某个时间点堆的使用情况&lt;span class="hx-absolute -hx-mt-20" id="查看某个时间点堆的使用情况">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%aa%e6%97%b6%e9%97%b4%e7%82%b9%e5%a0%86%e7%9a%84%e4%bd%bf%e7%94%a8%e6%83%85%e5%86%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/aa2cb61b817e520379277b90937ac21909b4abd5/go/view-trace-heap.png" alt="view-trace-heap" loading="lazy" />&lt;/p>
&lt;ol>
&lt;li>红色部分表示已经占用的内存&lt;/li>
&lt;li>绿色部分的上边沿表示下次 GC 的目标内存，也就是绿色部分用完之后，就会触发 GC。&lt;/li>
&lt;/ol>
&lt;h4>查看某个时间点的系统线程&lt;span class="hx-absolute -hx-mt-20" id="查看某个时间点的系统线程">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%aa%e6%97%b6%e9%97%b4%e7%82%b9%e7%9a%84%e7%b3%bb%e7%bb%9f%e7%ba%bf%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/aa2cb61b817e520379277b90937ac21909b4abd5/go/view-trace-threads.png" alt="view-trace-threads" loading="lazy" />&lt;/p>
&lt;p>图中正在运行的线程数量为 3，正在调用 SysCall 的线程数量为 0。&lt;/p>
&lt;h4>查看 GC&lt;span class="hx-absolute -hx-mt-20" id="查看-gc">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b-gc" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/aa2cb61b817e520379277b90937ac21909b4abd5/go/view-trace-gc.png" alt="view-trace-gc" loading="lazy" />&lt;/p>
&lt;p>可以选择多个查看统计信息。&lt;/p>
&lt;h4>查看某个时间点的 goroutine 运行情况&lt;span class="hx-absolute -hx-mt-20" id="查看某个时间点的-goroutine-运行情况">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%aa%e6%97%b6%e9%97%b4%e7%82%b9%e7%9a%84-goroutine-%e8%bf%90%e8%a1%8c%e6%83%85%e5%86%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/aa2cb61b817e520379277b90937ac21909b4abd5/go/view-trace-folw-events.png" alt="view-trace-folw-events" loading="lazy" />&lt;/p>
&lt;p>点击具体的 Goroutine 可以查看详细信息：&lt;/p>
&lt;ul>
&lt;li>&lt;code>Start&lt;/code>：开始时间&lt;/li>
&lt;li>&lt;code>Wall Duration&lt;/code>：持续时间&lt;/li>
&lt;li>&lt;code>Self Time&lt;/code>：执行时间&lt;/li>
&lt;li>&lt;code>Start Stack Trace&lt;/code>：开始时的堆栈信息&lt;/li>
&lt;li>&lt;code>End Stack Trace&lt;/code>：结束时的堆栈信息&lt;/li>
&lt;li>&lt;code>Incoming flow&lt;/code>：输入流&lt;/li>
&lt;li>&lt;code>Outgoing flow&lt;/code>：输出流&lt;/li>
&lt;li>&lt;code>Preceding events&lt;/code>：之前的事件&lt;/li>
&lt;li>&lt;code>Following events&lt;/code>：之后的事件&lt;/li>
&lt;li>&lt;code>All connected&lt;/code>：所有连接的事件&lt;/li>
&lt;/ul>
&lt;p>点击 &lt;code>Flow events&lt;/code> 选择 &lt;code>All&lt;/code>，可以查看程序运行中的事件流情况。&lt;/p>
&lt;h3>Goroutine analysis&lt;span class="hx-absolute -hx-mt-20" id="goroutine-analysis">&lt;/span>
&lt;a href="#goroutine-analysis" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>进入 &lt;code>Goroutine analysis&lt;/code> 可查看整个运行过程中，每个函数块有多少个 goroutine 在跑，并且观察每个的 goroutine 的运行开销都花费在哪个阶段。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/aa2cb61b817e520379277b90937ac21909b4abd5/go/goroutines-analysis.png" alt="goroutines-analysis" loading="lazy" />&lt;/p>
&lt;p>点击一个 goroutine 查看详细信息，例如 &lt;code>main.main.func1&lt;/code>：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/aa2cb61b817e520379277b90937ac21909b4abd5/go/goroutines-analysis-n.png" alt="goroutines-analysis-n" loading="lazy" />&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>含义&lt;/th>
&lt;th>耗时&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Execution Time&lt;/td>
&lt;td>执行时间&lt;/td>
&lt;td>983ms&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Network Wait Time&lt;/td>
&lt;td>网络等待时间&lt;/td>
&lt;td>0ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sync Block Time&lt;/td>
&lt;td>同步阻塞时间&lt;/td>
&lt;td>0ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blocking Syscall Time&lt;/td>
&lt;td>调用阻塞时间&lt;/td>
&lt;td>2ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scheduler Wait Time&lt;/td>
&lt;td>调度等待时间&lt;/td>
&lt;td>194µs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GC Sweeping&lt;/td>
&lt;td>GC 清扫&lt;/td>
&lt;td>0ns&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GC Pause&lt;/td>
&lt;td>GC 暂停&lt;/td>
&lt;td>14ms&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Go 性能优化</title><link>https://shipengqi.github.io/golang-learn/docs/practice/06_performance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/06_performance/</guid><description>
&lt;h2>JSON 优化&lt;span class="hx-absolute -hx-mt-20" id="json-优化">&lt;/span>
&lt;a href="#json-%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 的标准库 &lt;code>encoding/json&lt;/code> 是通过反射来实现的。性能相对有些慢。 可以使用第三方库来替代标准库：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/json-iterator/go" target="_blank" rel="noopener">json-iterator/go&lt;/a>，完全兼容标准库，性能有很大提升。&lt;/li>
&lt;li>&lt;a href="https://github.com/goccy/go-json" target="_blank" rel="noopener">go-json&lt;/a>，完全兼容标准库，性能强于 &lt;code>json-iterator/go&lt;/code>。&lt;/li>
&lt;li>&lt;a href="https://github.com/bytedance/sonic" target="_blank" rel="noopener">sonic&lt;/a>，字节开发的的 JSON 序列化/反序列化库，速度快，但是对硬件有一些要求。&lt;/li>
&lt;/ul>
&lt;p>实际开发中可以根据编译标签来选择 &lt;code>JSON&lt;/code> 库，参考 &lt;a href="https://github.com/shipengqi/component-base/tree/main/json" target="_blank" rel="noopener">component-base/json&lt;/a>。&lt;/p>
&lt;h2>使用空结构体&lt;span class="hx-absolute -hx-mt-20" id="使用空结构体">&lt;/span>
&lt;a href="#%e4%bd%bf%e7%94%a8%e7%a9%ba%e7%bb%93%e6%9e%84%e4%bd%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在 Go 中空结构体 &lt;code>struct{}&lt;/code> 不占据内存空间：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;unsafe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">struct&lt;/span>&lt;span class="p">{}{}))&lt;/span> &lt;span class="c1">// 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>空结构体不占据内存空间，因此被广泛作为各种场景下的占位符使用，可以节省资源。&lt;/p>
&lt;h3>集合 Set&lt;span class="hx-absolute -hx-mt-20" id="集合-set">&lt;/span>
&lt;a href="#%e9%9b%86%e5%90%88-set" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>要实现一个 &lt;code>Set&lt;/code>，通常会使用 &lt;code>map&lt;/code> 来实现，比如 &lt;code>map[string]bool&lt;/code>。 但是对于集合来说， 只需要 &lt;code>map&lt;/code> 的键，而不需要值。将值设置为 &lt;code>bool&lt;/code>
类型，就会多占据 1 个字节。这个时候就可以使用空结构体 &lt;code>map[string]struct{}&lt;/code>。&lt;/p>
&lt;h3>channel 通知&lt;span class="hx-absolute -hx-mt-20" id="channel-通知">&lt;/span>
&lt;a href="#channel-%e9%80%9a%e7%9f%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>有时候使用 &lt;code>channel&lt;/code> 不需要发送任何的数据，只用来通知 goroutine 执行任务，或结束等。这个时候就可以使用空结构体。&lt;/p>
&lt;h2>内存对齐&lt;span class="hx-absolute -hx-mt-20" id="内存对齐">&lt;/span>
&lt;a href="#%e5%86%85%e5%ad%98%e5%af%b9%e9%bd%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>为什么需要内存对齐？&lt;span class="hx-absolute -hx-mt-20" id="为什么需要内存对齐">&lt;/span>
&lt;a href="#%e4%b8%ba%e4%bb%80%e4%b9%88%e9%9c%80%e8%a6%81%e5%86%85%e5%ad%98%e5%af%b9%e9%bd%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>CPU 访问内存时，并不是逐个字节访问，而是以&lt;strong>字长&lt;/strong>（word size）为单位访问。比如：&lt;/p>
&lt;ul>
&lt;li>64 位系统 1 个字长等于 8 个字节&lt;/li>
&lt;li>32 位系统 1 个字长等于 4 个字节&lt;/li>
&lt;/ul>
&lt;p>因此 CPU 在读取内存时是一块一块进行读取的。这么设计的目的，是减少 CPU 访问内存的次数，加大 CPU 访问内存的吞吐量。比如同样读取 8 个字节的数据，一
次读取 4 个字节那么只需要读取 2 次。&lt;/p>
&lt;p>进行内存对齐，就是为了减少 CPU 访问内存的次数。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/0a6f953f0387c30638ae8b0e03dda230194d10ab/go/mem-align.png" alt="mem-align" loading="lazy" />&lt;/p>
&lt;p>上图中，假如 CPU 字长为 4 个字节。变量 a 和 b 的大小为 3 个字节，没有内存对齐之前，CPU 读取 b 时，需要访问两次内存：&lt;/p>
&lt;ol>
&lt;li>第一次读取 0-3 字节，移除不需要的 0-2 字节，拿到 b 的第一个字节，&lt;/li>
&lt;li>第二次读取 4-7 字节，读取到 b 的后面两个字节，并移除不需要的 6，7 字节。&lt;/li>
&lt;li>合并 4 个字节的数据&lt;/li>
&lt;li>放入寄存器&lt;/li>
&lt;/ol>
&lt;p>内存对齐后，a 和 b 都占据了 4 个字节空间，CPU 读取 b 就只需要访问一次内存，读取到 4-7 字节。&lt;/p>
&lt;h3>对齐系数&lt;span class="hx-absolute -hx-mt-20" id="对齐系数">&lt;/span>
&lt;a href="#%e5%af%b9%e9%bd%90%e7%b3%bb%e6%95%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>不同平台上的编译器都有自己默认的 “对齐系数”，常用的平台的系数如下：&lt;/p>
&lt;ul>
&lt;li>64 位系统：8&lt;/li>
&lt;li>32 位系统：4&lt;/li>
&lt;/ul>
&lt;p>&lt;code>unsafe&lt;/code> 标准库提供了 &lt;code>Alignof&lt;/code> 方法，可以返回一个类型的对齐系数。例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bool align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">bool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="c1">// bool align: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;int8 align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="c1">// int8 align: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;int16 align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int16&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="c1">// int16 align: 2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;int32 align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int32&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="c1">// int32 align: 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;int64 align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">int64&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="c1">// int64 align: 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;byte align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">byte&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="c1">// byte align: 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;string align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;EDDYCJY&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// string align: 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;map align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">map&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">{}))&lt;/span> &lt;span class="c1">// map align: 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>对齐规则&lt;span class="hx-absolute -hx-mt-20" id="对齐规则">&lt;/span>
&lt;a href="#%e5%af%b9%e9%bd%90%e8%a7%84%e5%88%99" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>对于任意类型的变量 &lt;code>x&lt;/code>，&lt;code>unsafe.Alignof(x)&lt;/code> 至少为 1。&lt;/li>
&lt;li>对于 &lt;code>struct&lt;/code> 结构体类型的变量 &lt;code>x&lt;/code>，计算 &lt;code>x&lt;/code> 每一个字段 &lt;code>f&lt;/code> 的 &lt;code>unsafe.Alignof(x.f)&lt;/code>，&lt;code>unsafe.Alignof(x)&lt;/code> 等于其中的最大值。&lt;/li>
&lt;li>对于 &lt;code>array&lt;/code> 数组类型的变量 &lt;code>x&lt;/code>，&lt;code>unsafe.Alignof(x)&lt;/code> 等于构成数组的元素类型的对齐倍数。&lt;/li>
&lt;/ol>
&lt;h3>Go 结构体内存对齐&lt;span class="hx-absolute -hx-mt-20" id="go-结构体内存对齐">&lt;/span>
&lt;a href="#go-%e7%bb%93%e6%9e%84%e4%bd%93%e5%86%85%e5%ad%98%e5%af%b9%e9%bd%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>struct&lt;/code> 中的字段的顺序会对 &lt;code>struct&lt;/code> 的大小产生影响吗？&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Part1&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span> &lt;span class="kt">int8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="kt">int32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Part2&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span> &lt;span class="kt">int8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="kt">int32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">b&lt;/span> &lt;span class="kt">int16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">part1&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Part1&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;part1 size: %d, align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">part1&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">part1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">part2&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">Part2&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;part2 size: %d, align: %d\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">part2&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Alignof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">part2&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输出：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>// Output:
// part1 size: 8, align: 4
// part2 size: 12, align: 4&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>Part1&lt;/code> 只是对成员变量的字段顺序进行了调整，就减少了结构体占用大小。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/ca9f00e7c3f54f02935d6615da69123d09ee8c7c/go/struct-mem-align.png" alt="mem-align" loading="lazy" />&lt;/p>
&lt;p>&lt;code>part1&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>a 从第 0 个位置开始占据 1 字节。&lt;/li>
&lt;li>b 对齐系数为 2，因此，必须空出 1 个字节，偏移量才是 2 的倍数，从第 2 个位置开始占据 2 字节。&lt;/li>
&lt;li>c 对齐系数为 4，此时，内存已经是对齐的，从第 4 个位置开始占据 4 字节即可。&lt;/li>
&lt;/ul>
&lt;p>&lt;code>part2&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>a 从第 0 个位置开始占据 1 字节。&lt;/li>
&lt;li>c 对齐系数为 4，因此，必须空出 3 个字节，偏移量才是 4 的倍数，从第 4 个位置开始占据 4 字节。&lt;/li>
&lt;li>b 对齐系数为 2，从第 8 个位置开始占据 2 字节。&lt;/li>
&lt;/ul>
&lt;h3>空 &lt;code>struct{}&lt;/code> 的对齐&lt;span class="hx-absolute -hx-mt-20" id="空-struct-的对齐">&lt;/span>
&lt;a href="#%e7%a9%ba-struct-%e7%9a%84%e5%af%b9%e9%bd%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>空 &lt;code>struct{}&lt;/code> 大小为 0，作为其他 struct 的字段时，一般不需要内存对齐。但是当 &lt;code>struct{}&lt;/code> 作为结构体最后一个字段时，需要内存对齐。
因为如果有指针指向该字段, 返回的地址将在结构体之外，如果此指针一直存活不释放对应的内存，就会有内存泄露的问题（该内存不因结构体释放而释放）。&lt;/p>
&lt;p>因此，当 &lt;code>struct{}&lt;/code> 作为其他 &lt;code>struct&lt;/code> 最后一个字段时，需要填充额外的内存保证安全。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Part1&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="kt">int32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Part2&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="kt">int32&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Part1&lt;/span>&lt;span class="p">{}))&lt;/span> &lt;span class="c1">// 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">Part2&lt;/span>&lt;span class="p">{}))&lt;/span> &lt;span class="c1">// 4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到 &lt;code>Part1{&lt;/code>} 额外填充了 4 字节的空间。&lt;/p>
&lt;h2>逃逸分析&lt;span class="hx-absolute -hx-mt-20" id="逃逸分析">&lt;/span>
&lt;a href="#%e9%80%83%e9%80%b8%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>编译器决定内存分配位置的方式，就称之为&lt;strong>逃逸分析&lt;/strong>(escape analysis)。逃逸分析由编译器完成，作用于编译阶段。&lt;/p>
&lt;p>变量逃逸是指编译器将一个变量从栈上分配到对上的情况。&lt;/p>
&lt;p>在 Go 中，栈是跟函数绑定的，函数结束时栈被回收。如果一个变量分配在栈中，则函数执行结束可自动将内存回收。如果分配在堆中，则函数执行结束可交给 GC（垃圾回收）处理。&lt;/p>
&lt;p>变量逃逸常见的情况：&lt;/p>
&lt;ol>
&lt;li>指针逃逸：返回指针，当一个函数返回一个局部变量的指针时，编译器就不得不吧该变量分配到堆上，以便函数返回后还可以访问它。&lt;/li>
&lt;li>发送指针或带有指针的值到 channel 中，编译时，是没有办法知道哪个 goroutine 会在 channel 上接收数据。所以编译器没法知道变量什么时候才会被释放。该值就会被分配到堆上。&lt;/li>
&lt;li>在一个切片上存储指针或带指针的值。例如 &lt;code>[]*string&lt;/code> 。这会导致切片的内容逃逸。尽管其后面的数组可能是在栈上分配的，但其引用的值一定是在堆上。&lt;/li>
&lt;li>切片的底层数组被重新分配了，因为 append 时可能会超出其容量。切片初始化的地方在编译时是可以知道的，它最开始会在栈上分配。如果切片背后的存储要基于运行时的数据进行扩充，就会在堆上分配。&lt;/li>
&lt;li>在 &lt;code>interface&lt;/code> 类型上调用方法都是&lt;strong>动态调度&lt;/strong>的，方法的实现只能在运行时才知道。比如 &lt;code>io.Reader&lt;/code> 类型的变量 &lt;code>r&lt;/code>，调用 &lt;code>r.Read(b)&lt;/code> 会使 &lt;code>r&lt;/code> 的值和切片 &lt;code>b&lt;/code> 的底层数组都逃逸掉，在堆上分配。&lt;/li>
&lt;li>数据类型不确定，如调用 &lt;code>fmt.Sprintf&lt;/code>，&lt;code>json.Marshal&lt;/code> 等接受变量为 &lt;code>...interface{}&lt;/code> 的函数，会导致传入的变量逃逸到堆上。&lt;/li>
&lt;li>闭包引用：如果一个局部变量被一个闭包函数引用，那么编译器也可能把它分配到堆上，确保闭包可以继续访问它。
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">isaclosure&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">v&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">v&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>栈空间不足&lt;/li>
&lt;/ol>
&lt;p>变量逃逸就意味着增加了堆中的对象个数，影响 GC 耗时，影响性能。所以编写代码时，避免返回指针，限制闭包的作用范围等来要尽量避免逃逸。&lt;/p>
&lt;p>可以使用编译器的 &lt;code>gcflags=&amp;quot;-m&amp;quot;&lt;/code> 来查看变量逃逸的情况：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">A&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">s&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 在方法内返回局部变量的指针
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">A&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">A&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="c1">// a 会逃逸到堆上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">a&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">b&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34; world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s">&amp;#34;!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// c 数据类型不确定，所以 escapes to heap
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>运行 &lt;code>go run -gcflags=-m ./main.go&lt;/code> 会得到下面类似的输出：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># command-line-arguments
./main.go:10:6: can inline foo
./main.go:17:10: inlining call to foo
./main.go:20:13: inlining call to fmt.Println
./main.go:10:10: leaking param: s
./main.go:11:10: new(A) escapes to heap
./main.go:17:10: new(A) does not escape
./main.go:18:11: a.s &amp;#43; &amp;#34; world&amp;#34; does not escape
./main.go:19:9: b &amp;#43; &amp;#34;!&amp;#34; escapes to heap
./main.go:20:13: c escapes to heap
./main.go:20:13: []interface {} literal does not escape
&amp;lt;autogenerated&amp;gt;:1: .this does not escape
&amp;lt;autogenerated&amp;gt;:1: .this does not escape
hello world!&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>传值还是传指针？&lt;span class="hx-absolute -hx-mt-20" id="传值还是传指针">&lt;/span>
&lt;a href="#%e4%bc%a0%e5%80%bc%e8%bf%98%e6%98%af%e4%bc%a0%e6%8c%87%e9%92%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>传值会拷贝整个对象，而传指针只会拷贝指针地址，指向的对象是同一个。传指针可以减少值的拷贝，但是会导致内存分配逃逸到堆中，增加垃圾回收(GC)的负担。在对
象频繁创建和删除的场景下，传递指针导致的 GC 开销可能会严重影响性能。&lt;/p>
&lt;p>一般情况下，对于需要修改原对象值，或占用内存比较大的结构体，选择传指针。对于只读的占用内存较小的结构体，直接传值能够获得更好的性能。&lt;/p>
&lt;h2>死码消除&lt;span class="hx-absolute -hx-mt-20" id="死码消除">&lt;/span>
&lt;a href="#%e6%ad%bb%e7%a0%81%e6%b6%88%e9%99%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>死码消除(dead code elimination, DCE)是一种编译器优化技术，用处是在编译阶段去掉对程序运行结果没有任何影响的代码。&lt;/p>
&lt;p>死码消除可以减小程序体积，程序运行过程中避免执行无用的指令，缩短运行时间。&lt;/p>
&lt;h3>使用常量提升性能&lt;span class="hx-absolute -hx-mt-20" id="使用常量提升性能">&lt;/span>
&lt;a href="#%e4%bd%bf%e7%94%a8%e5%b8%b8%e9%87%8f%e6%8f%90%e5%8d%87%e6%80%a7%e8%83%bd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>有些场景下，使用常量不仅可以减少程序的体积，性能也会有很大的提升。&lt;/p>
&lt;p>&lt;code>usevar.go&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">num1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">num2&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">num1&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">num2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">num1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">num2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nf">Max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>useconst.go&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">Max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">num1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">num2&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">num1&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">num2&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">num1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">num2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">const&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nf">Max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面两个文件编译后的文件大小：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ ls -lh
-rwxr-xr-x 1 pshi2 1049089 1.9M Oct 24 13:45 usevar.exe
-rwxr-xr-x 1 pshi2 1049089 1.5M Oct 24 13:44 useconst.exe&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>只是使用了常量代替变量，两个文件的大小就相差 0.3 M，为什么？&lt;/p>
&lt;p>使用 &lt;code>-gcflags=-m&lt;/code> 参数可以查看编译器做了哪些优化：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go build -gcflags=-m ./useconst.go
# command-line-arguments
./main.go:5:6: can inline Max
./main.go:15:8: inlining call to Max
./main.go:16:14: inlining call to fmt.Println
./main.go:16:14: ... argument does not escape
./main.go:16:15: a escapes to heap&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>Max&lt;/code> 函数被内联了，内联后的代码是这样的：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>由于 a 和 b 均为常量，在编译阶段会直接计算：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="p">&amp;gt;&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">result&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>10 &amp;gt; 20&lt;/code> 永远为假，那么分支消除，&lt;code>result&lt;/code> 永远等于 20：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="mi">20&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>20 == 10&lt;/code> 也永远为假，再次消除分支：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但是对于变量 a 和 b，编译器并不知道运行过程中 a、b 会不会发生改变，因此不能够进行死码消除，这部分代码被编译到最终的二进制程序中。因此编译后的二进制程序体积大了 0.3 M。&lt;/p>
&lt;p>因此，&lt;strong>在声明全局变量时，如果能够确定为常量，尽量使用 &lt;code>const&lt;/code> 而非 &lt;code>var&lt;/code>&lt;/strong>。这样很多运算在编译器即可执行。死码消除后，既减小了二进制的体积，又可以提高运行时的效率。&lt;/p>
&lt;h3>可推断的局部变量&lt;span class="hx-absolute -hx-mt-20" id="可推断的局部变量">&lt;/span>
&lt;a href="#%e5%8f%af%e6%8e%a8%e6%96%ad%e7%9a%84%e5%b1%80%e9%83%a8%e5%8f%98%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Go 编译器只对函数的局部变量做了优化，当可以推断出函数的局部变量的值时，死码消除仍然会生效，例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的代码与 &lt;code>useconst.go&lt;/code> 的编译结果是一样的，因为编译器可以推断出 a、b 变量的值。&lt;/p>
&lt;p>如果增加了并发操作：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">20&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">b&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的代码，a、b 的值不能有效推断，死码消除失效。&lt;/p>
&lt;p>包级别的变量推断难度是非常大的。函数内部的局部变量的修改只会发生在该函数中。但是如果是包级别的变量，对该变量的修改可能出现在：&lt;/p>
&lt;ul>
&lt;li>包初始化函数 &lt;code>init()&lt;/code> 中，&lt;code>init()&lt;/code> 函数可能有多个，且可能位于不同的 &lt;code>.go&lt;/code> 源文件。&lt;/li>
&lt;li>包内的其他函数。&lt;/li>
&lt;li>如果是 public 变量（首字母大写），其他包引用时可修改。&lt;/li>
&lt;/ul>
&lt;p>因此，Go 编译器只对局部变量作了优化。&lt;/p>
&lt;h2>利用 sync.Pool 减少堆分配&lt;span class="hx-absolute -hx-mt-20" id="利用-syncpool-减少堆分配">&lt;/span>
&lt;a href="#%e5%88%a9%e7%94%a8-syncpool-%e5%87%8f%e5%b0%91%e5%a0%86%e5%88%86%e9%85%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://shipengqi.github.io/golang-learn/golang-learn/docs/concurrency/06_pool/" >sync.Pool 使用&lt;/a>。&lt;/p>
&lt;h2>控制 goroutine 的并发数量&lt;span class="hx-absolute -hx-mt-20" id="控制-goroutine-的并发数量">&lt;/span>
&lt;a href="#%e6%8e%a7%e5%88%b6-goroutine-%e7%9a%84%e5%b9%b6%e5%8f%91%e6%95%b0%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>基于 GPM 的 Go 调度器，可以大规模的创建 goroutine 来执行任务，可能 1k，1w 个 goroutine 没有问题，但是当 goroutine 非常大时，比如 10w，100w 甚至更多
就会出现问题。&lt;/p>
&lt;ol>
&lt;li>即使每个 goroutine 只分配 2KB 的内存，但是数量太多会导致内存占用暴涨，对 GC 造成极大的压力，GC 是有 STW 机制的，运行时会挂起用户程序直到垃圾回收完。虽然 Go 1.8 去掉了 STW 以及改成了并行 GC，性能上有了不
小的提升但是，如果太过于频繁地进行 GC，依然会有性能瓶颈。&lt;/li>
&lt;li>runtime 和 GC 也都是 goroutine，如果 goroutine 规模太大，内存吃紧，Go 调度器就会阻塞 goroutine，进而导致内存溢出，甚至 crash。&lt;/li>
&lt;/ol>
&lt;h3>利用 channel 的缓存区控制并发数量&lt;span class="hx-absolute -hx-mt-20" id="利用-channel-的缓存区控制并发数量">&lt;/span>
&lt;a href="#%e5%88%a9%e7%94%a8-channel-%e7%9a%84%e7%bc%93%e5%ad%98%e5%8c%ba%e6%8e%a7%e5%88%b6%e5%b9%b6%e5%8f%91%e6%95%b0%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">wg&lt;/span> &lt;span class="nx">sync&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">WaitGroup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 创建缓冲区大小为 3 的 channel
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">ch&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{},&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 如果缓存区满了，则会阻塞在这里
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">ch&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{}{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">wg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">go&lt;/span> &lt;span class="kd">func&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">defer&lt;/span> &lt;span class="nx">wg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Done&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Second&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 释放缓冲区
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">ch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}(&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">wg&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Wait&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>使用第三方 goroutine pool&lt;span class="hx-absolute -hx-mt-20" id="使用第三方-goroutine-pool">&lt;/span>
&lt;a href="#%e4%bd%bf%e7%94%a8%e7%ac%ac%e4%b8%89%e6%96%b9-goroutine-pool" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>常用的第三方 goroutine pool：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/panjf2000/ants" target="_blank" rel="noopener">ants&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sourcegraph/conc" target="_blank" rel="noopener">conc&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2>零拷贝优化&lt;span class="hx-absolute -hx-mt-20" id="零拷贝优化">&lt;/span>
&lt;a href="#%e9%9b%b6%e6%8b%b7%e8%b4%9d%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>优化字符串与 []byte 转换，减少内存分配&lt;span class="hx-absolute -hx-mt-20" id="优化字符串与-byte-转换减少内存分配">&lt;/span>
&lt;a href="#%e4%bc%98%e5%8c%96%e5%ad%97%e7%ac%a6%e4%b8%b2%e4%b8%8e-byte-%e8%bd%ac%e6%8d%a2%e5%87%8f%e5%b0%91%e5%86%85%e5%ad%98%e5%88%86%e9%85%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>在开发中，字符串与 &lt;code>[]byte&lt;/code> 相互转换是经常用到的。直接通过类型转换 &lt;code>string(bytes)&lt;/code> 或者 &lt;code>[]byte(str)&lt;/code> 会带来数据的复制，性能不佳。&lt;/p>
&lt;p>在 Go 1.20 之前的版本可以采用下面的方式来优化：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// B2S convert []byte to string.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">B2S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="kt">string&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// S2B convert string to []byte.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">S2B&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bh&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">reflect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">SliceHeader&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">sh&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nx">reflect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StringHeader&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Data&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">sh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Data&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Cap&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">sh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Len&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">bh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Len&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nx">sh&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Len&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Go 1.20 提供了新的方式：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// B2S convert []byte to string.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">B2S&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kt">string&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">String&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">SliceData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">b&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// S2B convert string to []byte.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">S2B&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Slice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StringData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>设置 GOMAXPROCS&lt;span class="hx-absolute -hx-mt-20" id="设置-gomaxprocs">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae-gomaxprocs" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>GOMAXPROCS&lt;/code> 是 Go 提供的一个非常重要的环境变量。设置它的值可以调整调度器 Processor 的数量，每个 Processor 都会绑定一个系统线程。所以 Processor 的数量，会影响 Go 的并发性能。&lt;/p>
&lt;p>Go 1.5 版本以后，&lt;code>GOMAXPROCS&lt;/code> 的默认值是机器的 CPU 核数（&lt;code>runtime.NumCPU()&lt;/code> 的返回值）。&lt;/p>
&lt;p>但是 &lt;code>runtime.NumCPU()&lt;/code> 在容器中是无法获取正确的 CPU 核数的，因为容器是使用 &lt;code>cgroup&lt;/code> 技术对 CPU 资源进行隔离限制的，但 &lt;code>runtime.NumCPU()&lt;/code> 获取的却是&lt;strong>宿主机的 CPU 核数&lt;/strong>。
例如一个 Kubernetes 集群中 Node 核数是 36，然后创建一个 Pod，并且限制 Pod 的 CPU 核数是 1。Pod 中的进程在设置 &lt;code>GOMAXPROCS&lt;/code> 后，线程数量是 36。导致线程过多，线程频繁切换，增加上线文切换的负担。&lt;/p>
&lt;p>Uber 提供了一个库 &lt;code>go.uber.org/automaxprocs&lt;/code> 可以解决这个问题：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">_&lt;/span> &lt;span class="s">&amp;#34;go.uber.org/automaxprocs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Go Core Dump 调试</title><link>https://shipengqi.github.io/golang-learn/docs/practice/07_coredump/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/07_coredump/</guid><description>
&lt;p>Go 也可以开启类似 C++ Core Dump 功能，Core Dump 是程序崩溃时的内存快照。程序崩溃时，可以帮助定位 crash 发生的原因。&lt;/p>
&lt;h2>开启 Core Dump 功能&lt;span class="hx-absolute -hx-mt-20" id="开启-core-dump-功能">&lt;/span>
&lt;a href="#%e5%bc%80%e5%90%af-core-dump-%e5%8a%9f%e8%83%bd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>在 Linux 中，可以通过 &lt;code>ulimit -c&lt;/code> 查看 Core Dump 功能是否开启：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ ulimit -c
0&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输出为 0，表示未开启。&lt;/p>
&lt;p>使用 &lt;code>ulimit -c [size]&lt;/code> 来指定 core dump 文件的大小，也就是开启 Core Dump。&lt;code>ulimit -c unlimited&lt;/code> 表示不限制 core dump 文件的大小。&lt;/p>
&lt;p>例如，下面的命令是将 core dump 文件大小设置为 &lt;code>1MB&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ ulimit -c 1048576&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>如何生成 Core Dump 文件&lt;span class="hx-absolute -hx-mt-20" id="如何生成-core-dump-文件">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e7%94%9f%e6%88%90-core-dump-%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 提供的环境变量 &lt;code>GOTRACEBACK&lt;/code> 可以用来控制程序崩溃时输出的详细程度。可选值有：&lt;/p>
&lt;ul>
&lt;li>&lt;code>none&lt;/code>：不显示任何 goroutine 的堆栈信息。&lt;/li>
&lt;li>&lt;code>single&lt;/code>：默认选项，显示当前 goroutine 的堆栈信息。&lt;/li>
&lt;li>&lt;code>all&lt;/code>：显示所有用户创建的 goroutine 的堆栈信息。&lt;/li>
&lt;li>&lt;code>system&lt;/code>：显示所有 goroutine 的堆栈信息，包括 runtime。&lt;/li>
&lt;li>&lt;code>crash&lt;/code>：作用和 &lt;code>system&lt;/code> 一样, 但是会生成 core dump 文件。&lt;/li>
&lt;/ul>
&lt;p>可以设置 &lt;code>export GOTRACEBACK=crash&lt;/code> 来生成 core dump 文件。&lt;/p>
&lt;p>编译时要确保使用编译器标志 &lt;code>-N&lt;/code> 和 &lt;code>-l&lt;/code> 来构建二进制文件，&lt;code>-N&lt;/code> 和 &lt;code>-l&lt;/code> 回禁用编译器优化，因为编译器优化会使调试变得困难。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go build -gcflags=all=&amp;#34;-N -l&amp;#34;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>如何调试 Core Dump 文件&lt;span class="hx-absolute -hx-mt-20" id="如何调试-core-dump-文件">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e8%b0%83%e8%af%95-core-dump-%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;math/rand&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">n&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">rand&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Intn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1e6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">sum&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">n&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="nx">sum&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">42&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;panic for GOTRACEBACK&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的示例运行后会直接崩溃：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>panic: panic for GOTRACEBACK
goroutine 1 [running]:
main.main()
C:/Code/example.v1/system/coredump/main.go:21 &amp;#43;0x78&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的堆栈信息没有太多有用的信息。&lt;/p>
&lt;p>这时就可以使用环境变量 &lt;code>GOTRACEBACK=crash&lt;/code> 是程序生成 core dump 文件。然后重新运行，现在就会已打印出所有 goroutine，包括 runtime：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>GOROOT=C:\Program Files\Go #gosetup
GOPATH=C:\Code\gowork #gosetup
&amp;#34;C:\Program Files\Go\bin\go.exe&amp;#34; build -o C:\Users\shipeng\AppData\Local\Temp\GoLand\___1go_build_github_com_shipengqi_example_v1_system_coredump.exe github.com/shipengqi/example.v1/system/coredump #gosetup
C:\Users\shipeng\AppData\Local\Temp\GoLand\___1go_build_github_com_shipengqi_example_v1_system_coredump.exe #gosetup
panic: panic for GOTRACEBACK
goroutine 1 [running]:
panic({0x4408c0, 0x45e5f8})
C:/Program Files/Go/src/runtime/panic.go:1147 &amp;#43;0x3a8 fp=0xc000047f58 sp=0xc000047e98 pc=0x40ea08
main.main()
C:/Code/example.v1/system/coredump/main.go:21 &amp;#43;0x78 fp=0xc000047f80 sp=0xc000047f58 pc=0x43be58
runtime.main()
C:/Program Files/Go/src/runtime/proc.go:255 &amp;#43;0x217 fp=0xc000047fe0 sp=0xc000047f80 pc=0x411437
runtime.goexit()
C:/Program Files/Go/src/runtime/asm_amd64.s:1581 &amp;#43;0x1 fp=0xc000047fe8 sp=0xc000047fe0 pc=0x435921
goroutine 2 [force gc (idle)]:
runtime.gopark(0x0, 0x0, 0x0, 0x0, 0x0)
C:/Program Files/Go/src/runtime/proc.go:366 &amp;#43;0xd6 fp=0xc000043fb0 sp=0xc000043f90 pc=0x4117d6
runtime.goparkunlock(...)
C:/Program Files/Go/src/runtime/proc.go:372
runtime.forcegchelper()
C:/Program Files/Go/src/runtime/proc.go:306 &amp;#43;0xb1 fp=0xc000043fe0 sp=0xc000043fb0 pc=0x411671
runtime.goexit()
C:/Program Files/Go/src/runtime/asm_amd64.s:1581 &amp;#43;0x1 fp=0xc000043fe8 sp=0xc000043fe0 pc=0x435921
created by runtime.init.7
C:/Program Files/Go/src/runtime/proc.go:294 &amp;#43;0x25
goroutine 3 [GC sweep wait]:
runtime.gopark(0x0, 0x0, 0x0, 0x0, 0x0)
C:/Program Files/Go/src/runtime/proc.go:366 &amp;#43;0xd6 fp=0xc000045fb0 sp=0xc000045f90 pc=0x4117d6
runtime.goparkunlock(...)
C:/Program Files/Go/src/runtime/proc.go:372
runtime.bgsweep()
C:/Program Files/Go/src/runtime/mgcsweep.go:163 &amp;#43;0x88 fp=0xc000045fe0 sp=0xc000045fb0 pc=0x3fc7e8
runtime.goexit()
C:/Program Files/Go/src/runtime/asm_amd64.s:1581 &amp;#43;0x1 fp=0xc000045fe8 sp=0xc000045fe0 pc=0x435921
created by runtime.gcenable
C:/Program Files/Go/src/runtime/mgc.go:181 &amp;#43;0x55
goroutine 4 [GC scavenge wait]:
runtime.gopark(0x0, 0x0, 0x0, 0x0, 0x0)
C:/Program Files/Go/src/runtime/proc.go:366 &amp;#43;0xd6 fp=0xc000055f80 sp=0xc000055f60 pc=0x4117d6
runtime.goparkunlock(...)
C:/Program Files/Go/src/runtime/proc.go:372
runtime.bgscavenge()
C:/Program Files/Go/src/runtime/mgcscavenge.go:265 &amp;#43;0xcd fp=0xc000055fe0 sp=0xc000055f80 pc=0x3fa8ed
runtime.goexit()
C:/Program Files/Go/src/runtime/asm_amd64.s:1581 &amp;#43;0x1 fp=0xc000055fe8 sp=0xc000055fe0 pc=0x435921
created by runtime.gcenable
C:/Program Files/Go/src/runtime/mgc.go:182 &amp;#43;0x65&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>同级目录下会成一个文件名前缀是 &lt;code>core&lt;/code> 的文件，然后就可以使用 delve 调试。&lt;/p>
&lt;h3>调试&lt;span class="hx-absolute -hx-mt-20" id="调试">&lt;/span>
&lt;a href="#%e8%b0%83%e8%af%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>调试需要先安装 delve：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go install github.com/go-delve/delve/cmd/dlv@latest&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>然后执行命令 &lt;code>dlv core &amp;lt;可执行文件&amp;gt; &amp;lt;core 文件&amp;gt;&lt;/code> 会进入交互模式：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ dlv core main core.27507
Type &amp;#39;help&amp;#39; for list of commands.
(dlv)&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>输入 &lt;code>goroutines&lt;/code> 可以查看所有 goroutines 信息：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>(dlv) goroutines
* Goroutine 1 - User: ./main.go:11 main.main (0x47023e) (thread 27507)
Goroutine 2 - User: /usr/local/go/src/runtime/proc.go:399 runtime.gopark (0x439ffc) [force gc (idle)]
Goroutine 3 - User: /usr/local/go/src/runtime/proc.go:399 runtime.gopark (0x439ffc) [GC sweep wait]
Goroutine 4 - User: /usr/local/go/src/runtime/proc.go:399 runtime.gopark (0x439ffc) [GC scavenge wait]
[4 goroutines]&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>Goroutine 1 是 main goroutine，也是导致崩溃的 goroutine，输入 &lt;code>goroutine 1&lt;/code> 切换到 Goroutine 1 的栈帧：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>(dlv) goroutine 1
Switched from 1 to 1 (thread 27507)
(dlv) &lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>执行 &lt;code>bt&lt;/code> 查看详细的栈帧信息：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>(dlv) bt
0 0x0000000000465021 in runtime.raise
at /usr/local/go/src/runtime/sys_linux_amd64.s:154
1 0x000000000044c525 in runtime.dieFromSignal
at /usr/local/go/src/runtime/signal_unix.go:903
2 0x000000000044cbb5 in runtime.sigfwdgo
at /usr/local/go/src/runtime/signal_unix.go:1108
3 0x000000000044b485 in runtime.sigtrampgo
at /usr/local/go/src/runtime/signal_unix.go:432
4 0x0000000000465306 in runtime.sigtramp
at /usr/local/go/src/runtime/sys_linux_amd64.s:352
5 0x0000000000465400 in runtime.sigreturn__sigaction
at /usr/local/go/src/runtime/sys_linux_amd64.s:471
6 0x0000000000000001 in ???
at ?:-1
7 0x000000000044c712 in runtime.crash
at /usr/local/go/src/runtime/signal_unix.go:985
8 0x000000000043785e in runtime.fatalpanic
at /usr/local/go/src/runtime/panic.go:1202
9 0x0000000000436fb9 in runtime.gopanic
at /usr/local/go/src/runtime/panic.go:1017
10 0x000000000047023e in main.main
at ./main.go:11
11 0x0000000000439b87 in runtime.main
at /usr/local/go/src/runtime/proc.go:267
12 0x0000000000463821 in runtime.goexit
at /usr/local/go/src/runtime/asm_amd64.s:1650
(dlv) &lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的输出中：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>10 0x000000000047023e in main.main
at ./main.go:11&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以定位到导致崩溃的代码在 &lt;code>main.go&lt;/code>，然后输入 &lt;code>frame 10&lt;/code> 进入具体的代码中：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>(dlv) frame 10
&amp;gt; runtime.raise() /usr/local/go/src/runtime/sys_linux_amd64.s:154 (PC: 0x465021)
Warning: debugging optimized function
Frame 10: ./main.go:11 (PC: 47023e)
Warning: listing may not match stale executable
6: var sum int
7: for {
8: n := rand.Intn(1e6)
9: sum &amp;#43;= n
10: if sum % 42 == 0 {
=&amp;gt; 11: panic(&amp;#34;panic for GOTRACEBACK&amp;#34;)
12: }
13: }
14: }
(dlv) &lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以定位到第 11 行代码导致的 panic。&lt;/p></description></item><item><title>Go Modules</title><link>https://shipengqi.github.io/golang-learn/docs/practice/08_mod/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/08_mod/</guid><description>
&lt;p>Go 在 1.11 推出了 Go Modules，这是一个新的包管理器，解决了 &lt;code>GOPATH&lt;/code> 存在的问题。并且 Go 1.13 起不再推荐使用 GOPATH。&lt;/p>
&lt;h2>Go Modules 机制&lt;span class="hx-absolute -hx-mt-20" id="go-modules-机制">&lt;/span>
&lt;a href="#go-modules-%e6%9c%ba%e5%88%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go Modules 将依赖缓存放在 &lt;code>$GOPATH/pkg/mod&lt;/code> 目录，并且&lt;strong>同一个依赖的版本，只会缓存一份，供所有项目使用&lt;/strong>。&lt;/p>
&lt;h3>启用 Go Modules&lt;span class="hx-absolute -hx-mt-20" id="启用-go-modules">&lt;/span>
&lt;a href="#%e5%90%af%e7%94%a8-go-modules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Go 1.11 引入了环境变量 &lt;code>GO111MODULE&lt;/code> 来控制是否启用 Go Modules，&lt;code>GO111MODULE&lt;/code> 有三个值可选：&lt;/p>
&lt;ul>
&lt;li>&lt;code>on&lt;/code> 启用 Go Modules&lt;/li>
&lt;li>&lt;code>off&lt;/code> 禁用 Go Modules&lt;/li>
&lt;li>&lt;code>auto&lt;/code>，在 &lt;code>GOPATH&lt;/code> 下的项目，使用 &lt;code>GOPATH&lt;/code>，否则启用 Go Modules。&lt;/li>
&lt;/ul>
&lt;p>Go 1.16 之前 &lt;code>GO111MODULE&lt;/code> 的默认值是 &lt;code>auto&lt;/code>，Go 1.16 起 &lt;code>GO111MODULE&lt;/code> 的默认值为 &lt;code>on&lt;/code>。&lt;/p>
&lt;h3>初始化&lt;span class="hx-absolute -hx-mt-20" id="初始化">&lt;/span>
&lt;a href="#%e5%88%9d%e5%a7%8b%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>初始化 Go Modules 项目，首先要开启 Go Modules，然后在项目目录下运行：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go mod init &amp;lt;project-path&amp;gt;&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>下载依赖&lt;span class="hx-absolute -hx-mt-20" id="下载依赖">&lt;/span>
&lt;a href="#%e4%b8%8b%e8%bd%bd%e4%be%9d%e8%b5%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>下载依赖使用 &lt;code>go get&lt;/code> 命令，命令格式为 &lt;code>go get &amp;lt;package[@version]&amp;gt;&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>go get golang.org/x/test@latest&lt;/code>，&lt;code>@latest&lt;/code> 表示选择最新的稳定版本，例如 &lt;code>v1.2.3&lt;/code>。如果没有稳定版本，选择最新的预发布版本，例如 &lt;code>v1.2.3-alpha.1&lt;/code>。
如果依赖没有 tag，那么选择最新的 commit。&lt;/li>
&lt;li>&lt;code>go get golang.org/x/test&lt;/code> 同上。&lt;/li>
&lt;li>&lt;code>go get golang.org/x/test@v1.2.3&lt;/code> 下载 tag 为 &lt;code>v1.2.3&lt;/code> 的版本。&lt;/li>
&lt;li>&lt;code>go get golang.org/x/test@v0&lt;/code> 下载 tag 前缀为 &lt;code>v0&lt;/code> 的版本。&lt;/li>
&lt;li>&lt;code>go get golang.org/x/test@master&lt;/code> 下载 master 分支上最新的 commit。&lt;/li>
&lt;li>&lt;code>go get golang.org/x/test@37s237s&lt;/code> 下载哈希值为 &lt;code>37s237s&lt;/code> 的 commit，如果该 commit 存在对应的 tag，转换为 tag 并下载。&lt;/li>
&lt;/ul>
&lt;p>&lt;code>go get -u&lt;/code> 更新现有的依赖。&lt;/p>
&lt;h3>Go Modules 代理&lt;span class="hx-absolute -hx-mt-20" id="go-modules-代理">&lt;/span>
&lt;a href="#go-modules-%e4%bb%a3%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>国内是无法访问 &lt;code>golang.org&lt;/code> 的，Go 1.13 引入了环境变量 &lt;code>GOPROXY&lt;/code>，可以用来设置 Go Modules 的代理。&lt;/p>
&lt;p>&lt;code>GOPROXY&lt;/code> 的默认值为 &lt;code>https://proxy.golang.org,direct&lt;/code>，&lt;code>GOPROXY&lt;/code> 可以设置多个，用 &lt;code>,&lt;/code> 分隔。&lt;/p>
&lt;p>执行 &lt;code>go get/install&lt;/code> 时会优先从代理服务器下载依赖。如果从一个代理服务器下载失败，当遇见 &lt;code>direct&lt;/code> 时，表示回源到依赖的源地址去下载。&lt;/p>
&lt;h4>设置 GOPROXY&lt;span class="hx-absolute -hx-mt-20" id="设置-goproxy">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae-goproxy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>使用 &lt;code>go env -w GOPROXY=https://goproxy.cn,direct&lt;/code> 命令来设置 &lt;code>GOPROXY&lt;/code> 的值。&lt;/p>
&lt;h3>GOPRIVATE&lt;span class="hx-absolute -hx-mt-20" id="goprivate">&lt;/span>
&lt;a href="#goprivate" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>如果项目有一个私有依赖，设置 &lt;code>GOPROXY&lt;/code> 也无法访问，可以使用 &lt;code>GOPRIVATE&lt;/code>。&lt;/p>
&lt;p>比如 &lt;code>GOPRIVATE=corp.example.com,github.com/pookt/demo&lt;/code> 表示前缀可以匹配 &lt;code>corp.example.com&lt;/code> 或者 &lt;code>github.com/pookt/demo&lt;/code> 的依赖都会被认为是私有依赖。&lt;/p>
&lt;p>&lt;code>GOPRIVATE&lt;/code> 支持通配符，例如 &lt;code>*.example.com&lt;/code>。&lt;/p>
&lt;p>&lt;code>GOPRIVATE&lt;/code> 较为特殊，它的值将作为 &lt;code>GONOPROXY&lt;/code> 和 &lt;code>GONOSUMDB&lt;/code> 的默认值。所以只使用 &lt;code>GOPRIVATE&lt;/code> 就足够。&lt;/p>
&lt;h3>go.mod 文件&lt;span class="hx-absolute -hx-mt-20" id="gomod-文件">&lt;/span>
&lt;a href="#gomod-%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>go.mod&lt;/code> 是 Go Modules 项目所必须的最重要的文件，描述了当前项目的元信息，目前有 5 个关键字：&lt;/p>
&lt;ul>
&lt;li>&lt;code>module&lt;/code>：定义当前项目的模块路径。&lt;/li>
&lt;li>&lt;code>go&lt;/code>：预期的 Go 版本。&lt;/li>
&lt;li>&lt;code>require&lt;/code>：指定项目的依赖版本，格式为&lt;code>&amp;lt;依赖的路径&amp;gt; &amp;lt;版本&amp;gt; [// indirect]&lt;/code>。&lt;/li>
&lt;li>&lt;code>exclude&lt;/code>：排除一个特定的依赖版本。&lt;/li>
&lt;li>&lt;code>replace&lt;/code>：将一个依赖版本替换为另外一个依赖版本，格式为 &lt;code>module =&amp;gt; newmodule&lt;/code>。&lt;/li>
&lt;/ul>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>module example.com/foobar
go 1.13
require (
example.com/apple v0.1.2
example.com/pear v1.2.3
example.com/watermelon v3.3.10&amp;#43;incompatible
example.com/banana/v2 v2.3.4 // indirect
example.com/pineapple v0.0.0-20190924185754-1b0db40df49a
)
exclude example.com/banana v1.2.4
replace example.com/apple v0.1.2 =&amp;gt; example.com/rda v0.1.0
replace example.com/banana =&amp;gt; example.com/hugebanana&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>replace&lt;span class="hx-absolute -hx-mt-20" id="replace">&lt;/span>
&lt;a href="#replace" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>replace&lt;/code> 是用来将一个依赖版本替换为另外一个依赖版本，格式为 &lt;code>module =&amp;gt; newmodule&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>newmodule&lt;/code> 可以是本地相对路径，例如 &lt;code>github.com/gin-gonic/gin =&amp;gt; ./gin&lt;/code>。&lt;/li>
&lt;li>&lt;code>newmodule&lt;/code> 也可以是本地绝对路径，例如 &lt;code>github.com/gin-gonic/gin =&amp;gt; /home/root/gin&lt;/code>。&lt;/li>
&lt;li>&lt;code>newmodule&lt;/code> 可以是网络路径，例如 &lt;code>golang.org/x/text v0.3.2 =&amp;gt; github.com/golang/text v0.3.2&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h4>依赖的导入路径说明&lt;span class="hx-absolute -hx-mt-20" id="依赖的导入路径说明">&lt;/span>
&lt;a href="#%e4%be%9d%e8%b5%96%e7%9a%84%e5%af%bc%e5%85%a5%e8%b7%af%e5%be%84%e8%af%b4%e6%98%8e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>上面示例中 &lt;code>example.com/banana/v2 v2.3.4&lt;/code>，&lt;code>example.com/banana/v2&lt;/code> 的导入路径有 &lt;code>/v2&lt;/code> 为什么其他依赖的导入路径没有 &lt;code>/v0&lt;/code> 或者 &lt;code>/v1&lt;/code>。&lt;/p>
&lt;p>因为 Go modules 在主版本号为 &lt;code>v0&lt;/code> 和 &lt;code>v1&lt;/code> 的情况下省略了版本号，不需要在模块导入路径包含主版本的信息。而在主版本号为 &lt;code>v2&lt;/code> 及以上则需要在导入路径末尾加上主版本号。&lt;/p>
&lt;h4>v0.0.0-xxx 是什么版本&lt;span class="hx-absolute -hx-mt-20" id="v000-xxx-是什么版本">&lt;/span>
&lt;a href="#v000-xxx-%e6%98%af%e4%bb%80%e4%b9%88%e7%89%88%e6%9c%ac" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Go 拉去的依赖如果没有 tag，那么选择最新的 commit。例如上面示例中的 &lt;code>example.com/pineapple v0.0.0-20190924185754-1b0db40df49a&lt;/code>。&lt;/p>
&lt;p>&lt;code>v0.0.0&lt;/code> 是因为 &lt;code>example.com/pineapple&lt;/code> 这个依赖不存在 tag，&lt;code>20190924185754&lt;/code> 最新一次 commit 的 commit 时间，&lt;code>1b0db40df49a&lt;/code> 是 commit 的哈希值。&lt;/p>
&lt;h4>indirect&lt;span class="hx-absolute -hx-mt-20" id="indirect">&lt;/span>
&lt;a href="#indirect" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>上面示例中的 &lt;code>example.com/banana/v2 v2.3.4 // indirect&lt;/code>。&lt;code>indirect&lt;/code> 表示该依赖为间接依赖。&lt;/p>
&lt;p>通常上 &lt;code>go.mod&lt;/code> 中出现的都应该是直接依赖，但是下面的两种情况会在 &lt;code>go.mod&lt;/code> 中添加间接依赖：&lt;/p>
&lt;ul>
&lt;li>当前项目的某个直接依赖没有使用 Go Modules。&lt;/li>
&lt;li>当前项目的某个直接依赖的 &lt;code>go.mod&lt;/code> 文件中缺失某个依赖，那么这个缺失的依赖会被添加在当前项目的 &lt;code>go.mod&lt;/code> 文件中，作为间接依赖。&lt;/li>
&lt;/ul>
&lt;h4>incompatible&lt;span class="hx-absolute -hx-mt-20" id="incompatible">&lt;/span>
&lt;a href="#incompatible" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>上面示例中的 &lt;code>example.com/watermelon v3.3.10+incompatible&lt;/code>。&lt;code>incompatible&lt;/code> 表示该依赖的路径跟版本不符合规范，&lt;code>v3.3.10&lt;/code> 版本按照规范，引用路径应该为 &lt;code>example.com/watermelon/v3&lt;/code>。
所以 Go 会在版本后加上 &lt;code>+incompatible&lt;/code>。&lt;/p>
&lt;h3>go.sum 文件&lt;span class="hx-absolute -hx-mt-20" id="gosum-文件">&lt;/span>
&lt;a href="#gosum-%e6%96%87%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>go.sum&lt;/code> 列出了当前项目所有直接或间接依赖的版本，记录每个依赖的哈希值，目的是为了保证项目所依赖的版本不会被篡改。&lt;/p>
&lt;h2>go mod 命令&lt;span class="hx-absolute -hx-mt-20" id="go-mod-命令">&lt;/span>
&lt;a href="#go-mod-%e5%91%bd%e4%bb%a4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>go mod&lt;/code> 常用的几个子命令：&lt;/p>
&lt;ul>
&lt;li>&lt;code>init&lt;/code>：初始化 &lt;code>go.mod&lt;/code> 文件&lt;/li>
&lt;li>&lt;code>tidy&lt;/code>：自动添加项目依赖，并移除无用的依赖&lt;/li>
&lt;li>&lt;code>download&lt;/code>：下载依赖到本地缓存。&lt;/li>
&lt;li>&lt;code>graph&lt;/code>：查看现有的依赖结构&lt;/li>
&lt;li>&lt;code>why&lt;/code>：查看为什么需要一个依赖&lt;/li>
&lt;/ul>
&lt;h3>迁移回 vendor 模式&lt;span class="hx-absolute -hx-mt-20" id="迁移回-vendor-模式">&lt;/span>
&lt;a href="#%e8%bf%81%e7%a7%bb%e5%9b%9e-vendor-%e6%a8%a1%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>go mod vendor&lt;/code> 可以将 Go Modules 迁移回到模式。&lt;/p>
&lt;p>这个命令并只是单纯地把 &lt;code>go.sum&lt;/code> 中的所有依赖下载到 &lt;code>vendor&lt;/code> 目录里。&lt;/p>
&lt;p>再使用 &lt;code>go build -mod=vendor&lt;/code> 来构建项目，因为在 Go Modules 模式下 &lt;code>go build&lt;/code> 是屏蔽 vendor 机制的。&lt;/p>
&lt;p>注意发布时需要带上 vendor 目录。&lt;/p>
&lt;h2>其他&lt;span class="hx-absolute -hx-mt-20" id="其他">&lt;/span>
&lt;a href="#%e5%85%b6%e4%bb%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>设置 HTTP Proxy 却仍然无法下载依赖&lt;span class="hx-absolute -hx-mt-20" id="设置-http-proxy-却仍然无法下载依赖">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae-http-proxy-%e5%8d%b4%e4%bb%8d%e7%84%b6%e6%97%a0%e6%b3%95%e4%b8%8b%e8%bd%bd%e4%be%9d%e8%b5%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>通常如果设置了 HTTP Proxy，&lt;code>go get/install&lt;/code> 会使用指定的代理去下载依赖，例如：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># windows&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> &lt;span class="nv">http_proxy&lt;/span>&lt;span class="o">=&lt;/span>http://&lt;span class="o">[&lt;/span>user&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>pass&lt;span class="o">]&lt;/span>@&lt;span class="o">[&lt;/span>proxy_ip&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>proxy_port&lt;span class="o">]&lt;/span>/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> &lt;span class="nv">https_proxy&lt;/span>&lt;span class="o">=&lt;/span>http://&lt;span class="o">[&lt;/span>user&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>pass&lt;span class="o">]&lt;/span>@&lt;span class="o">[&lt;/span>proxy_ip&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>proxy_port&lt;span class="o">]&lt;/span>/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># linux&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">http_proxy&lt;/span>&lt;span class="o">=&lt;/span>http://&lt;span class="o">[&lt;/span>user&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>pass&lt;span class="o">]&lt;/span>@&lt;span class="o">[&lt;/span>proxy_ip&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>proxy_port&lt;span class="o">]&lt;/span>/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">https_proxy&lt;/span>&lt;span class="o">=&lt;/span>http://&lt;span class="o">[&lt;/span>user&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>pass&lt;span class="o">]&lt;/span>@&lt;span class="o">[&lt;/span>proxy_ip&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>proxy_port&lt;span class="o">]&lt;/span>/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>但是，如果拉取的依赖是使用 Git 作为源控制管理器，那么还需要配置 Git 的 Proxy，否则还是无法下载依赖：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git config --global http.proxy http://&lt;span class="o">[&lt;/span>user&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>pass&lt;span class="o">]&lt;/span>@&lt;span class="o">[&lt;/span>proxy_ip&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>proxy_port&lt;span class="o">]&lt;/span>/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git config --global https.proxy http://&lt;span class="o">[&lt;/span>user&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>pass&lt;span class="o">]&lt;/span>@&lt;span class="o">[&lt;/span>proxy_ip&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>proxy_port&lt;span class="o">]&lt;/span>/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>清理缓存&lt;span class="hx-absolute -hx-mt-20" id="清理缓存">&lt;/span>
&lt;a href="#%e6%b8%85%e7%90%86%e7%bc%93%e5%ad%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>go clean -modcache&lt;/code> 可以用来清理所有缓存的依赖。&lt;/p></description></item><item><title>Gin 静态服务器</title><link>https://shipengqi.github.io/golang-learn/docs/practice/09_gin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/09_gin/</guid><description>
&lt;p>Gin 作为 Web 框架提供 API 非常方便，但是在同一个项目中，既提供 API，又要作为前端网页的静态服务器，就比较麻烦。通常 Angular (React/Vue)
项目需要在 Nginx 或者 Tomcat 转发才可以。有些小项目并不需要前后端分离，如何解决？&lt;/p>
&lt;h2>利用 embed 标签&lt;span class="hx-absolute -hx-mt-20" id="利用-embed-标签">&lt;/span>
&lt;a href="#%e5%88%a9%e7%94%a8-embed-%e6%a0%87%e7%ad%be" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 1.16 增加了 &lt;code>embed&lt;/code> 的标签，可以利用这个标签将静态资源打包到二进制文件中。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── controller
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── model
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── options
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── pkg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── response
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── response.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── resources
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── dist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── html.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── html.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── resource.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── router.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── server.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── store
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── audited.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── groups.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── mysql.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── settings.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── store.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── tokens.go&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面项目的目录结构中注意这几个文件：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">├── resources
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ ├── dist
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│ └── html.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── html.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── resource.go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── router.go&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>dist&lt;/code> 是打包好的静态资源。&lt;/p>
&lt;p>&lt;code>html.go&lt;/code> 为了后面渲染 &lt;code>index.html&lt;/code> 和静态资源提供的变量：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">resources&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;embed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//go:embed dist/stat-web/index.html
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">Html&lt;/span> &lt;span class="p">[]&lt;/span>&lt;span class="kt">byte&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//go:embed dist/stat-web
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">Static&lt;/span> &lt;span class="nx">embed&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FS&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>resource.go&lt;/code> 实现了 &lt;code>FS&lt;/code> 接口：&lt;/p>
&lt;p>&lt;code>FS&lt;/code> 接口：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">FS&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Open opens the named file.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// When Open returns an error, it should be of type *PathError
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// with the Op field set to &amp;#34;open&amp;#34;, the Path field set to name,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// and the Err field describing the problem.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// Open should reject attempts to open names that do not satisfy
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ValidPath(name), returning a *PathError with Err set to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ErrInvalid or ErrNotExist.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">Open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">File&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>resource.go&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">apiserver&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;embed&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;io/fs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;path&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;project/resources&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">Resource&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fs&lt;/span> &lt;span class="nx">embed&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">FS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">path&lt;/span> &lt;span class="kt">string&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">staticPath&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Resource&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">Resource&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">fs&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">resources&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Static&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// resources/html.go 中定义的 Static
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">staticPath&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Resource&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">File&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">error&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// rewrite the static files path
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fullName&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">path&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// 这里拼出静态资源的完整路径，注意 windows 下使用 filepath.Join，会导致找不到文件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fullName&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>html.go&lt;/code> 中实现了 &lt;code>HtmlHandler&lt;/code> 用来渲染 &lt;code>index.html&lt;/code>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">apiserver&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;net/http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;github.com/gin-gonic/gin&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;project/resources&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">type&lt;/span> &lt;span class="nx">HtmlHandler&lt;/span> &lt;span class="kd">struct&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewHtmlHandler&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">HtmlHandler&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">HtmlHandler&lt;/span>&lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// RedirectIndex 重定向
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">HtmlHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">RedirectIndex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">gin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Redirect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusFound&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">h&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">HtmlHandler&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">c&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">gin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Context&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;content-type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;text/html;charset=utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">c&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">String&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">resources&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Html&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;code>router.go&lt;/code> 中配置路由：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">installController&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">g&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">gin&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Engine&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">html&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nf">NewHtmlHandler&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">html&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StaticFS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/static&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">NewResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dist/stat-web&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">StaticFS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/assets&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">http&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">FS&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">NewResource&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dist/stat-web/assets&amp;#34;&lt;/span>&lt;span class="p">)))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NoRoute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">RedirectIndex&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// APIs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">v1&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">g&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Group&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/api/v1&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上面的路由 &lt;code>g.StaticFS(&amp;quot;/static&amp;quot;, http.FS(NewResource(&amp;quot;dist/stat-web&amp;quot;)))&lt;/code> ，路径之所以是 &lt;code>/static&lt;/code> 是因为在打包 Angular 项目时使用了 &lt;code>--deploy-url&lt;/code>：&lt;/p>
&lt;p>&lt;code>assets&lt;/code> 目录下会有 icon，image，json 等静态资源。&lt;/p>
&lt;blockquote>
&lt;p>注意 &lt;code>index.html&lt;/code> 中 &lt;code>link rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/x-icon&amp;quot; href=&amp;quot;assets/favicon.ico&amp;quot;&lt;/code>，&lt;code>href&lt;/code> 的路径是 &lt;code>assets/favicon.ico&lt;/code>，
&lt;code>deploy-url&lt;/code> 并不会给 &lt;code>href=&amp;quot;assets/favicon.ico&amp;quot;&lt;/code> 添加 static 前缀。所以如果是 &lt;code>href=&amp;quot;favicon.ico&amp;quot;&lt;/code>，编译后会找不到该文件。&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ng build &amp;lt;project&amp;gt; --configuration production --deploy-url /static/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>&lt;code>--deploy-url&lt;/code> 将被弃用，之后需要考虑其他方式。暂时不使用 &lt;code>--base-href&lt;/code> 是因为：
deploy url 和 base href 都可用于初始脚本、样式表、惰性脚本和 css 资源。 但是，定义 base href 有一些独有的作用。
base href 可用于定位相对路径模板 (HTML) 资产和针对相对路径的 fetch/XMLHttpRequests。base href 也可用于定义 Angular 路由器的默认基地址。&lt;/p>
&lt;/blockquote></description></item><item><title>Go 远程开发调试</title><link>https://shipengqi.github.io/golang-learn/docs/practice/10_remote_dev/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shipengqi.github.io/golang-learn/docs/practice/10_remote_dev/</guid><description>
&lt;p>VS Code 是一款开源的代码编辑器，功能强大，支持远程开发调试。&lt;/p>
&lt;h2>搭建环境&lt;span class="hx-absolute -hx-mt-20" id="搭建环境">&lt;/span>
&lt;a href="#%e6%90%ad%e5%bb%ba%e7%8e%af%e5%a2%83" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>要实现 Go 远程开发调试，需要先安装 &lt;a href="https://marketplace.visualstudio.com/items?itemName=golang.Go" target="_blank" rel="noopener">Go for Visual Studio Code&lt;/a> 插件。&lt;/p>
&lt;p>VS Code 的 Remote 功能由三个插件组成，分别适用于三种不同的场景：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/remote/ssh" target="_blank" rel="noopener">Remote - SSH&lt;/a>：利用 SSH 连接远程主机进行开发。&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/devcontainers/containers" target="_blank" rel="noopener">Remote - Container&lt;/a>：连接当前机器上的容器进行开发。&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/remote/wsl" target="_blank" rel="noopener">Remote - WSL&lt;/a>：连接子系统（Windows Subsystem for Linux）进行开发。&lt;/li>
&lt;/ul>
&lt;p>SSH 模式的原理：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/f453d238f302873f51c3859269a86bcc8248d6ce/go/architecture-vscode-ssh.png" alt="architecture-vscode-ssh" loading="lazy" />
图片来自于 Visual Studio Code 官网&lt;/p>
&lt;h3>连接远程机器&lt;span class="hx-absolute -hx-mt-20" id="连接远程机器">&lt;/span>
&lt;a href="#%e8%bf%9e%e6%8e%a5%e8%bf%9c%e7%a8%8b%e6%9c%ba%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>安装插件 &lt;a href="https://code.visualstudio.com/docs/remote/ssh" target="_blank" rel="noopener">Remote SSH&lt;/a>。&lt;/p>
&lt;blockquote>
&lt;p>服务器需要支持 SSH 连接。&lt;/p>
&lt;/blockquote>
&lt;p>安装后，点击左下角的 &lt;code>Open a Remote Window&lt;/code>，选择 &lt;code>Connect to Host&lt;/code>。&lt;/p>
&lt;p>点击 &lt;code>Add New SSH Host&lt;/code> 配置你的远程机器，或者选择已经配置好的 Hosts。&lt;/p>
&lt;p>也可以使用快捷键 &lt;code>F1&lt;/code> 或者 &lt;code>ctrl+shift+p&lt;/code> 打开 commands，输入 &lt;code>Open SSH Configuration File&lt;/code> 直接编辑配置文件：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code># Read more about SSH config files: https://linux.die.net/man/5/ssh_config
Host shcCDFrh75vm8.hpeswlab.net
HostName shcCDFrh75vm8.hpeswlab.net
Port 22
User root
Host shccdfrh75vm7.hpeswlab.net
HostName shccdfrh75vm7.hpeswlab.net
User root&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>配置好之后：&lt;/p>
&lt;ol>
&lt;li>连接 host。&lt;/li>
&lt;li>选择 platform：Linux, Windows, macOS。&lt;/li>
&lt;li>输入密码建立连接。&lt;/li>
&lt;li>点击 &lt;code>Open Folder&lt;/code> 就可以打开远程机器上的代码目录了。&lt;/li>
&lt;li>VS Code 会提示远程机器需要安装 Go 扩展，选择安装。&lt;/li>
&lt;/ol>
&lt;p>左侧边栏的 Remote Explorer，可以快速打开远程机器上的代码目录：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/c31f3c17d77e206a8abf012b5aac54744b185dbe/go/vscode-remote-usage.png" alt="vscode-remote-usage" loading="lazy" />&lt;/p>
&lt;h3>配置免密登录&lt;span class="hx-absolute -hx-mt-20" id="配置免密登录">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae%e5%85%8d%e5%af%86%e7%99%bb%e5%bd%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>使用快捷键 &lt;code>F1&lt;/code> 或者 &lt;code>ctrl+shift+p&lt;/code> 打开 commands，输入 &lt;code>Open SSH Configuration File&lt;/code> 编辑配置文件：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>Host shccdfrh75vm7.hpeswlab.net
HostName shccdfrh75vm7.hpeswlab.net
User root
IdentityFile &amp;lt;absolute-path&amp;gt;/.ssh/id_rsa&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果没有秘钥，可以使用 &lt;code>ssh-keygen -t rsa&lt;/code> 命令生成。&lt;/p>
&lt;p>将 SSH 公钥添加到远程机器：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ ssh-copy-id username@remote-host&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果 &lt;code>ssh-copy-id&lt;/code> 命令不存在，就手动将 &lt;code>&amp;lt;absolute-path&amp;gt;/.ssh/id_rsa.pub&lt;/code> 的内容，追加到远程机器的 &lt;code>~/.ssh/authorized_keys&lt;/code> 文件后面。&lt;/p>
&lt;h2>远程开发&lt;span class="hx-absolute -hx-mt-20" id="远程开发">&lt;/span>
&lt;a href="#%e8%bf%9c%e7%a8%8b%e5%bc%80%e5%8f%91" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>连接到远程主机后，就可以进行远程开发了。可以像本地开发一样查看，修改文件。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/shipengqi/illustrations/c31f3c17d77e206a8abf012b5aac54744b185dbe/go/vscode-ssh-dev.png" alt="vscode-ssh-dev" loading="lazy" />&lt;/p>
&lt;h2>远程调试&lt;span class="hx-absolute -hx-mt-20" id="远程调试">&lt;/span>
&lt;a href="#%e8%bf%9c%e7%a8%8b%e8%b0%83%e8%af%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Go 远程调试本地机器和远程机器都需要&lt;a href="https://github.com/derekparker/delve/blob/master/Documentation/installation/README.md" target="_blank" rel="noopener">安装 &amp;ldquo;delve&amp;rdquo;&lt;/a>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;pre>&lt;code>$ go install github.com/go-delve/delve/cmd/dlv@latest&lt;/code>&lt;/pre>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>安装完成后需要配置调试工具，点击侧边栏中的 &amp;ldquo;Run and Debug&amp;rdquo;，点击 &amp;ldquo;create a launch.json file&amp;rdquo; 会在 &lt;code>.vscode&lt;/code> 目录下创建一个运行配置文件 &lt;code>launch.json&lt;/code>。&lt;/p>
&lt;p>下面是一个调试 Go 程序的 &lt;code>launch.json&lt;/code> 示例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Use IntelliSense to learn about possible attributes.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// Hover to view descriptions of existing attributes.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;0.2.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;configurations&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Debug helm list -A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;go&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;auto&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}/cmd/helm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-A&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;env&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;HELM_DRIVER&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;configmap&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Launch test function&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;go&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;args&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;-test.run&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;MyTestFunction&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Launch executable&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;go&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;exec&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;absolute-path-to-the-executable&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Launch test package&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;go&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;launch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;program&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;${workspaceFolder}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Attach to local process&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;go&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;request&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;attach&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;local&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;processId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">12784&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>常用属性：&lt;/p>
&lt;ul>
&lt;li>&lt;code>type&lt;/code>：调试器类型。&lt;code>node&lt;/code> 用于内置的 Node 调试器，&lt;code>php&lt;/code> 和 &lt;code>go&lt;/code> 用于 PHP 和 Go 扩展。&lt;/li>
&lt;li>&lt;code>request&lt;/code>：值可以是 &lt;code>launch&lt;/code>，&lt;code>attach&lt;/code>。当需要对一个已经运行的的程序 debug 时才使用 &lt;code>attach&lt;/code>，其他时候使用 &lt;code>launch&lt;/code>。&lt;/li>
&lt;li>&lt;code>mode&lt;/code>：值可以是 &lt;code>auto&lt;/code>，&lt;code>debug&lt;/code>，&lt;code>remote&lt;/code>，&lt;code>test&lt;/code>，&lt;code>exec&lt;/code>。 对于 &lt;code>attach&lt;/code> 只有 &lt;code>local&lt;/code>，&lt;code>remote&lt;/code>。&lt;/li>
&lt;li>&lt;code>program&lt;/code>：启动调试器时要运行的可执行文件或文件。&lt;/li>
&lt;li>&lt;code>args&lt;/code>： 传递给调试程序的参数。&lt;/li>
&lt;li>&lt;code>env&lt;/code>：环境变量（空值可用于 &amp;ldquo;取消定义 &amp;ldquo;变量），&lt;code>env&lt;/code> 中的值会覆盖 &lt;code>envFile&lt;/code> 中的值。&lt;/li>
&lt;li>&lt;code>envFile&lt;/code>：包含环境变量的 dotenv 文件的路径。&lt;/li>
&lt;li>&lt;code>cwd&lt;/code>：当前工作目录，用于查找依赖文件和其他文件。&lt;/li>
&lt;li>&lt;code>port&lt;/code>：连接到运行进程时的端口。&lt;/li>
&lt;li>&lt;code>stopOnEntry&lt;/code>：程序启动时立即中断。&lt;/li>
&lt;li>&lt;code>console&lt;/code>：使用哪种控制台，例如内部控制台、集成终端或外部终端。&lt;/li>
&lt;li>&lt;code>showLog&lt;/code>：是否在调试控制台打印日志, 一般为 &lt;code>true&lt;/code>。&lt;/li>
&lt;li>&lt;code>buildFlags&lt;/code>：构建程序时需要传递给 Go 编译器的 Flags，例如 &lt;code>-tags=your_tag&lt;/code>。&lt;/li>
&lt;li>&lt;code>remotePath&lt;/code>：&lt;code>mode&lt;/code> 为 &lt;code>remote&lt;/code> 时, 需要指定调试文件所在服务器的绝对路径。&lt;/li>
&lt;li>&lt;code>processId&lt;/code>：进程 id。&lt;/li>
&lt;li>&lt;code>host&lt;/code>：目标服务器地址。&lt;/li>
&lt;li>&lt;code>port&lt;/code>：目标端口。&lt;/li>
&lt;/ul>
&lt;p>常用的变量：&lt;/p>
&lt;ul>
&lt;li>&lt;code>${workspaceFolder}&lt;/code> 调试工作空间下的根目录下的所有文件。&lt;/li>
&lt;li>&lt;code>${file}&lt;/code> 调试当前文件。&lt;/li>
&lt;li>&lt;code>${fileDirname}&lt;/code> 调试当前文件所在目录下的所有文件。&lt;/li>
&lt;/ul>
&lt;p>更多的属性和变量可以查看 &lt;a href="https://code.visualstudio.com/docs/editor/debugging" target="_blank" rel="noopener">VS Code Debugging 文档&lt;/a>。&lt;/p>
&lt;p>配置好 &lt;code>launch.json&lt;/code> 后，在代码上打上断点，打开侧边栏的 &amp;ldquo;Run and Debug&amp;rdquo;，选择运行的配置，就可以开始调试了。&lt;/p></description></item></channel></rss>